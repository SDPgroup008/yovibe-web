{"ast":null,"code":"\"use client\";import{useState}from\"react\";import View from\"react-native-web/dist/exports/View\";import Text from\"react-native-web/dist/exports/Text\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import TextInput from\"react-native-web/dist/exports/TextInput\";import TouchableOpacity from\"react-native-web/dist/exports/TouchableOpacity\";import ScrollView from\"react-native-web/dist/exports/ScrollView\";import Alert from\"react-native-web/dist/exports/Alert\";import ActivityIndicator from\"react-native-web/dist/exports/ActivityIndicator\";import{Ionicons}from\"@expo/vector-icons\";import FirebaseService from\"../services/FirebaseService\";import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const DAYS_OF_WEEK=[\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\",\"Sunday\"];const ManageProgramsScreen=({navigation,route})=>{const{venueId,weeklyPrograms}=route.params;const[programs,setPrograms]=useState(weeklyPrograms||{});const[loading,setLoading]=useState(false);const handleProgramChange=(day,program)=>{setPrograms(prev=>Object.assign({},prev,{[day]:program}));};const handleSave=async()=>{setLoading(true);try{await FirebaseService.updateVenuePrograms(venueId,programs);Alert.alert(\"Success\",\"Weekly programs updated successfully\");navigation.goBack();}catch(error){console.error(\"Error updating programs:\",error);Alert.alert(\"Error\",\"Failed to update weekly programs\");}finally{setLoading(false);}};return _jsxs(ScrollView,{style:styles.container,children:[_jsxs(View,{style:styles.header,children:[_jsx(Text,{style:styles.headerTitle,children:\"Manage Weekly Programs\"}),_jsx(Text,{style:styles.headerSubtitle,children:\"Add or update your venue's weekly schedule\"})]}),DAYS_OF_WEEK.map(day=>_jsxs(View,{style:styles.dayContainer,children:[_jsx(Text,{style:styles.dayLabel,children:day}),_jsx(TextInput,{style:styles.programInput,value:programs[day]||\"\",onChangeText:text=>handleProgramChange(day,text),placeholder:`What's happening on ${day}?`,placeholderTextColor:\"#999\",multiline:true})]},day)),_jsx(TouchableOpacity,{style:[styles.saveButton,loading&&styles.disabledButton],onPress:handleSave,disabled:loading,children:loading?_jsx(ActivityIndicator,{color:\"#FFFFFF\"}):_jsxs(_Fragment,{children:[_jsx(Ionicons,{name:\"save-outline\",size:20,color:\"#FFFFFF\"}),_jsx(Text,{style:styles.saveButtonText,children:\"Save Programs\"})]})})]});};const styles=StyleSheet.create({container:{flex:1,backgroundColor:\"#121212\"},header:{padding:16,borderBottomWidth:1,borderBottomColor:\"#333\"},headerTitle:{fontSize:24,fontWeight:\"bold\",color:\"#FFFFFF\",marginBottom:8},headerSubtitle:{fontSize:16,color:\"#BBBBBB\"},dayContainer:{padding:16,borderBottomWidth:1,borderBottomColor:\"#333\"},dayLabel:{fontSize:18,fontWeight:\"bold\",color:\"#FFFFFF\",marginBottom:8},programInput:{backgroundColor:\"#1E1E1E\",borderRadius:8,padding:12,color:\"#FFFFFF\",borderWidth:1,borderColor:\"#333\",minHeight:80,textAlignVertical:\"top\"},saveButton:{flexDirection:\"row\",alignItems:\"center\",justifyContent:\"center\",backgroundColor:\"#2196F3\",margin:16,padding:16,borderRadius:8},disabledButton:{opacity:0.6},saveButtonText:{color:\"#FFFFFF\",fontSize:16,fontWeight:\"bold\",marginLeft:8}});export default ManageProgramsScreen;","map":{"version":3,"names":["useState","View","Text","StyleSheet","TextInput","TouchableOpacity","ScrollView","Alert","ActivityIndicator","Ionicons","FirebaseService","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","DAYS_OF_WEEK","ManageProgramsScreen","navigation","route","venueId","weeklyPrograms","params","programs","setPrograms","loading","setLoading","handleProgramChange","day","program","prev","Object","assign","handleSave","updateVenuePrograms","alert","goBack","error","console","style","styles","container","children","header","headerTitle","headerSubtitle","map","dayContainer","dayLabel","programInput","value","onChangeText","text","placeholder","placeholderTextColor","multiline","saveButton","disabledButton","onPress","disabled","color","name","size","saveButtonText","create","flex","backgroundColor","padding","borderBottomWidth","borderBottomColor","fontSize","fontWeight","marginBottom","borderRadius","borderWidth","borderColor","minHeight","textAlignVertical","flexDirection","alignItems","justifyContent","margin","opacity","marginLeft"],"sources":["C:/Users/user/Desktop/projects/life/Yo/yovibe-web/src/screens/ManageProgramsScreen.tsx"],"sourcesContent":["\"use client\"\n\nimport type React from \"react\"\nimport { useState } from \"react\"\nimport { View, Text, StyleSheet, TextInput, TouchableOpacity, ScrollView, Alert, ActivityIndicator } from \"react-native\"\nimport { Ionicons } from \"@expo/vector-icons\"\nimport FirebaseService from \"../services/FirebaseService\"\n\ninterface ManageProgramsScreenProps {\n  navigation: any\n  route: {\n    params: {\n      venueId: string\n      weeklyPrograms: Record<string, string>\n    }\n  }\n}\n\nconst DAYS_OF_WEEK = [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"]\n\nconst ManageProgramsScreen: React.FC<ManageProgramsScreenProps> = ({ navigation, route }) => {\n  const { venueId, weeklyPrograms } = route.params\n  const [programs, setPrograms] = useState<Record<string, string>>(weeklyPrograms || {})\n  const [loading, setLoading] = useState(false)\n\n  const handleProgramChange = (day: string, program: string) => {\n    setPrograms((prev) => ({\n      ...prev,\n      [day]: program,\n    }))\n  }\n\n  const handleSave = async () => {\n    setLoading(true)\n    try {\n      await FirebaseService.updateVenuePrograms(venueId, programs)\n      Alert.alert(\"Success\", \"Weekly programs updated successfully\")\n      navigation.goBack()\n    } catch (error) {\n      console.error(\"Error updating programs:\", error)\n      Alert.alert(\"Error\", \"Failed to update weekly programs\")\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  return (\n    <ScrollView style={styles.container}>\n      <View style={styles.header}>\n        <Text style={styles.headerTitle}>Manage Weekly Programs</Text>\n        <Text style={styles.headerSubtitle}>Add or update your venue's weekly schedule</Text>\n      </View>\n\n      {DAYS_OF_WEEK.map((day) => (\n        <View key={day} style={styles.dayContainer}>\n          <Text style={styles.dayLabel}>{day}</Text>\n          <TextInput\n            style={styles.programInput}\n            value={programs[day] || \"\"}\n            onChangeText={(text) => handleProgramChange(day, text)}\n            placeholder={`What's happening on ${day}?`}\n            placeholderTextColor=\"#999\"\n            multiline\n          />\n        </View>\n      ))}\n\n      <TouchableOpacity\n        style={[styles.saveButton, loading && styles.disabledButton]}\n        onPress={handleSave}\n        disabled={loading}\n      >\n        {loading ? (\n          <ActivityIndicator color=\"#FFFFFF\" />\n        ) : (\n          <>\n            <Ionicons name=\"save-outline\" size={20} color=\"#FFFFFF\" />\n            <Text style={styles.saveButtonText}>Save Programs</Text>\n          </>\n        )}\n      </TouchableOpacity>\n    </ScrollView>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#121212\",\n  },\n  header: {\n    padding: 16,\n    borderBottomWidth: 1,\n    borderBottomColor: \"#333\",\n  },\n  headerTitle: {\n    fontSize: 24,\n    fontWeight: \"bold\",\n    color: \"#FFFFFF\",\n    marginBottom: 8,\n  },\n  headerSubtitle: {\n    fontSize: 16,\n    color: \"#BBBBBB\",\n  },\n  dayContainer: {\n    padding: 16,\n    borderBottomWidth: 1,\n    borderBottomColor: \"#333\",\n  },\n  dayLabel: {\n    fontSize: 18,\n    fontWeight: \"bold\",\n    color: \"#FFFFFF\",\n    marginBottom: 8,\n  },\n  programInput: {\n    backgroundColor: \"#1E1E1E\",\n    borderRadius: 8,\n    padding: 12,\n    color: \"#FFFFFF\",\n    borderWidth: 1,\n    borderColor: \"#333\",\n    minHeight: 80,\n    textAlignVertical: \"top\",\n  },\n  saveButton: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    backgroundColor: \"#2196F3\",\n    margin: 16,\n    padding: 16,\n    borderRadius: 8,\n  },\n  disabledButton: {\n    opacity: 0.6,\n  },\n  saveButtonText: {\n    color: \"#FFFFFF\",\n    fontSize: 16,\n    fontWeight: \"bold\",\n    marginLeft: 8,\n  },\n})\n\nexport default ManageProgramsScreen\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}