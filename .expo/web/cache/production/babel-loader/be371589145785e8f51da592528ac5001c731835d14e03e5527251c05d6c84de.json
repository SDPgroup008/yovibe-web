{"ast":null,"code":"class LocationService{async requestPermissions(){try{if(navigator.geolocation){return true;}return false;}catch(error){console.error(\"Error requesting location permissions:\",error);return false;}}async getCurrentPosition(){return new Promise((resolve,reject)=>{if(!navigator.geolocation){resolve({latitude:37.78825,longitude:-122.4324,accuracy:null,timestamp:Date.now()});return;}navigator.geolocation.getCurrentPosition(position=>{resolve({latitude:position.coords.latitude,longitude:position.coords.longitude,accuracy:position.coords.accuracy,timestamp:position.timestamp});},error=>{console.error(\"Error getting current position:\",error);resolve({latitude:37.78825,longitude:-122.4324,accuracy:null,timestamp:Date.now()});},{enableHighAccuracy:true,timeout:15000,maximumAge:10000});});}watchPosition(callback){if(!navigator.geolocation){return{remove:()=>{}};}const watchId=navigator.geolocation.watchPosition(position=>{callback({latitude:position.coords.latitude,longitude:position.coords.longitude,accuracy:position.coords.accuracy,timestamp:position.timestamp});},error=>{console.error(\"Error watching position:\",error);},{enableHighAccuracy:true,timeout:15000,maximumAge:10000});return{remove:()=>{navigator.geolocation.clearWatch(watchId);}};}}export default new LocationService();","map":{"version":3,"names":["LocationService","requestPermissions","navigator","geolocation","error","console","getCurrentPosition","Promise","resolve","reject","latitude","longitude","accuracy","timestamp","Date","now","position","coords","enableHighAccuracy","timeout","maximumAge","watchPosition","callback","remove","watchId","clearWatch"],"sources":["C:/Users/user/Desktop/projects/life/Yo/yovibe-web/src/services/LocationService.ts"],"sourcesContent":["// Web-only implementation of LocationService\n\n/**\n * A simplified location service for web\n */\nclass LocationService {\n  /**\n   * Request location permissions from the user\n   */\n  async requestPermissions(): Promise<boolean> {\n    try {\n      if (navigator.geolocation) {\n        return true\n      }\n      return false\n    } catch (error) {\n      console.error(\"Error requesting location permissions:\", error)\n      return false\n    }\n  }\n\n  /**\n   * Get the current position of the device\n   */\n  async getCurrentPosition() {\n    return new Promise<{\n      latitude: number\n      longitude: number\n      accuracy: number | null\n      timestamp: number\n    }>((resolve, reject) => {\n      if (!navigator.geolocation) {\n        // Return a default location if geolocation is not available\n        resolve({\n          latitude: 37.78825,\n          longitude: -122.4324,\n          accuracy: null,\n          timestamp: Date.now(),\n        })\n        return\n      }\n\n      navigator.geolocation.getCurrentPosition(\n        (position) => {\n          resolve({\n            latitude: position.coords.latitude,\n            longitude: position.coords.longitude,\n            accuracy: position.coords.accuracy,\n            timestamp: position.timestamp,\n          })\n        },\n        (error) => {\n          console.error(\"Error getting current position:\", error)\n          // Return a default location if there's an error\n          resolve({\n            latitude: 37.78825,\n            longitude: -122.4324,\n            accuracy: null,\n            timestamp: Date.now(),\n          })\n        },\n        { enableHighAccuracy: true, timeout: 15000, maximumAge: 10000 },\n      )\n    })\n  }\n\n  /**\n   * Watch for location changes\n   */\n  watchPosition(\n    callback: (location: {\n      latitude: number\n      longitude: number\n      accuracy?: number | null\n      timestamp?: number\n    }) => void,\n  ) {\n    if (!navigator.geolocation) {\n      return { remove: () => {} }\n    }\n\n    const watchId = navigator.geolocation.watchPosition(\n      (position) => {\n        callback({\n          latitude: position.coords.latitude,\n          longitude: position.coords.longitude,\n          accuracy: position.coords.accuracy,\n          timestamp: position.timestamp,\n        })\n      },\n      (error) => {\n        console.error(\"Error watching position:\", error)\n      },\n      { enableHighAccuracy: true, timeout: 15000, maximumAge: 10000 },\n    )\n\n    return {\n      remove: () => {\n        navigator.geolocation.clearWatch(watchId)\n      },\n    }\n  }\n}\n\nexport default new LocationService()\n"],"mappings":"AAKA,KAAM,CAAAA,eAAgB,CAIpB,KAAM,CAAAC,kBAAkBA,CAAA,CAAqB,CAC3C,GAAI,CACF,GAAIC,SAAS,CAACC,WAAW,CAAE,CACzB,MAAO,KAAI,CACb,CACA,MAAO,MAAK,CACd,CAAE,MAAOC,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,wCAAwC,CAAEA,KAAK,CAAC,CAC9D,MAAO,MAAK,CACd,CACF,CAKA,KAAM,CAAAE,kBAAkBA,CAAA,CAAG,CACzB,MAAO,IAAI,CAAAC,OAAO,CAKf,CAACC,OAAO,CAAEC,MAAM,GAAK,CACtB,GAAI,CAACP,SAAS,CAACC,WAAW,CAAE,CAE1BK,OAAO,CAAC,CACNE,QAAQ,CAAE,QAAQ,CAClBC,SAAS,CAAE,CAAC,QAAQ,CACpBC,QAAQ,CAAE,IAAI,CACdC,SAAS,CAAEC,IAAI,CAACC,GAAG,CAAC,CACtB,CAAC,CAAC,CACF,OACF,CAEAb,SAAS,CAACC,WAAW,CAACG,kBAAkB,CACrCU,QAAQ,EAAK,CACZR,OAAO,CAAC,CACNE,QAAQ,CAAEM,QAAQ,CAACC,MAAM,CAACP,QAAQ,CAClCC,SAAS,CAAEK,QAAQ,CAACC,MAAM,CAACN,SAAS,CACpCC,QAAQ,CAAEI,QAAQ,CAACC,MAAM,CAACL,QAAQ,CAClCC,SAAS,CAAEG,QAAQ,CAACH,SACtB,CAAC,CAAC,CACJ,CAAC,CACAT,KAAK,EAAK,CACTC,OAAO,CAACD,KAAK,CAAC,iCAAiC,CAAEA,KAAK,CAAC,CAEvDI,OAAO,CAAC,CACNE,QAAQ,CAAE,QAAQ,CAClBC,SAAS,CAAE,CAAC,QAAQ,CACpBC,QAAQ,CAAE,IAAI,CACdC,SAAS,CAAEC,IAAI,CAACC,GAAG,CAAC,CACtB,CAAC,CAAC,CACJ,CAAC,CACD,CAAEG,kBAAkB,CAAE,IAAI,CAAEC,OAAO,CAAE,KAAK,CAAEC,UAAU,CAAE,KAAM,CAChE,CAAC,CACH,CAAC,CAAC,CACJ,CAKAC,aAAaA,CACXC,QAKU,CACV,CACA,GAAI,CAACpB,SAAS,CAACC,WAAW,CAAE,CAC1B,MAAO,CAAEoB,MAAM,CAAEA,CAAA,GAAM,CAAC,CAAE,CAAC,CAC7B,CAEA,KAAM,CAAAC,OAAO,CAAGtB,SAAS,CAACC,WAAW,CAACkB,aAAa,CAChDL,QAAQ,EAAK,CACZM,QAAQ,CAAC,CACPZ,QAAQ,CAAEM,QAAQ,CAACC,MAAM,CAACP,QAAQ,CAClCC,SAAS,CAAEK,QAAQ,CAACC,MAAM,CAACN,SAAS,CACpCC,QAAQ,CAAEI,QAAQ,CAACC,MAAM,CAACL,QAAQ,CAClCC,SAAS,CAAEG,QAAQ,CAACH,SACtB,CAAC,CAAC,CACJ,CAAC,CACAT,KAAK,EAAK,CACTC,OAAO,CAACD,KAAK,CAAC,0BAA0B,CAAEA,KAAK,CAAC,CAClD,CAAC,CACD,CAAEc,kBAAkB,CAAE,IAAI,CAAEC,OAAO,CAAE,KAAK,CAAEC,UAAU,CAAE,KAAM,CAChE,CAAC,CAED,MAAO,CACLG,MAAM,CAAEA,CAAA,GAAM,CACZrB,SAAS,CAACC,WAAW,CAACsB,UAAU,CAACD,OAAO,CAAC,CAC3C,CACF,CAAC,CACH,CACF,CAEA,cAAe,IAAI,CAAAxB,eAAe,CAAC,CAAC","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}