{"ast":null,"code":"class ImagePickerService{async launchImageLibraryAsync(options){return new Promise(resolve=>{const input=document.createElement(\"input\");input.type=\"file\";input.accept=\"image/*\";input.style.display=\"none\";input.onchange=event=>{const target=event.target;const files=target.files;if(!files||files.length===0){resolve({canceled:true});document.body.removeChild(input);return;}const file=files[0];const reader=new FileReader();reader.onload=e=>{const uri=e.target?.result;resolve({canceled:false,assets:[{uri,type:file.type,name:file.name,file}]});document.body.removeChild(input);};reader.onerror=()=>{resolve({canceled:true});document.body.removeChild(input);};reader.readAsDataURL(file);};document.body.appendChild(input);input.click();});}async requestMediaLibraryPermissionsAsync(){return{status:\"granted\"};}}export const MediaTypeOptions={Images:\"Images\",Videos:\"Videos\",All:\"All\"};export default new ImagePickerService();","map":{"version":3,"names":["ImagePickerService","launchImageLibraryAsync","options","Promise","resolve","input","document","createElement","type","accept","style","display","onchange","event","target","files","length","canceled","body","removeChild","file","reader","FileReader","onload","e","uri","result","assets","name","onerror","readAsDataURL","appendChild","click","requestMediaLibraryPermissionsAsync","status","MediaTypeOptions","Images","Videos","All"],"sources":["C:/Users/user/Desktop/projects/life/Yo/yovibe-web/src/services/ImagePickerService.web.ts"],"sourcesContent":["/**\r\n * Web-specific implementation of ImagePickerService\r\n */\r\n\r\nexport interface ImagePickerResult {\r\n  canceled: boolean\r\n  assets?: Array<{\r\n    uri: string\r\n    type?: string\r\n    name?: string\r\n    file?: File // Web-specific, contains the actual File object\r\n  }>\r\n}\r\n\r\nexport interface ImagePickerOptions {\r\n  mediaTypes: \"Images\" | \"Videos\" | \"All\"\r\n  allowsEditing?: boolean\r\n  aspect?: [number, number]\r\n  quality?: number\r\n}\r\n\r\n/**\r\n * Web implementation of image picker using HTML file input\r\n */\r\nclass ImagePickerService {\r\n  /**\r\n   * Launch the device's image library and let the user select an image\r\n   */\r\n  async launchImageLibraryAsync(options: ImagePickerOptions): Promise<ImagePickerResult> {\r\n    return new Promise((resolve) => {\r\n      // Create a file input element\r\n      const input = document.createElement(\"input\")\r\n      input.type = \"file\"\r\n      input.accept = \"image/*\"\r\n      input.style.display = \"none\"\r\n\r\n      // Handle file selection\r\n      input.onchange = (event) => {\r\n        const target = event.target as HTMLInputElement\r\n        const files = target.files\r\n\r\n        if (!files || files.length === 0) {\r\n          resolve({ canceled: true })\r\n          document.body.removeChild(input)\r\n          return\r\n        }\r\n\r\n        const file = files[0]\r\n        const reader = new FileReader()\r\n\r\n        reader.onload = (e) => {\r\n          const uri = e.target?.result as string\r\n          resolve({\r\n            canceled: false,\r\n            assets: [\r\n              {\r\n                uri,\r\n                type: file.type,\r\n                name: file.name,\r\n                file, // Store the actual File object for later upload\r\n              },\r\n            ],\r\n          })\r\n          document.body.removeChild(input)\r\n        }\r\n\r\n        reader.onerror = () => {\r\n          resolve({ canceled: true })\r\n          document.body.removeChild(input)\r\n        }\r\n\r\n        // Read the file as a data URL\r\n        reader.readAsDataURL(file)\r\n      }\r\n\r\n      // Add to DOM and trigger click\r\n      document.body.appendChild(input)\r\n      input.click()\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Request permissions - not needed for web\r\n   */\r\n  async requestMediaLibraryPermissionsAsync() {\r\n    return { status: \"granted\" }\r\n  }\r\n}\r\n\r\n// Constants to match expo-image-picker API\r\nexport const MediaTypeOptions = {\r\n  Images: \"Images\",\r\n  Videos: \"Videos\",\r\n  All: \"All\",\r\n}\r\n\r\nexport default new ImagePickerService()\r\n"],"mappings":"AAwBA,KAAM,CAAAA,kBAAmB,CAIvB,KAAM,CAAAC,uBAAuBA,CAACC,OAA2B,CAA8B,CACrF,MAAO,IAAI,CAAAC,OAAO,CAAEC,OAAO,EAAK,CAE9B,KAAM,CAAAC,KAAK,CAAGC,QAAQ,CAACC,aAAa,CAAC,OAAO,CAAC,CAC7CF,KAAK,CAACG,IAAI,CAAG,MAAM,CACnBH,KAAK,CAACI,MAAM,CAAG,SAAS,CACxBJ,KAAK,CAACK,KAAK,CAACC,OAAO,CAAG,MAAM,CAG5BN,KAAK,CAACO,QAAQ,CAAIC,KAAK,EAAK,CAC1B,KAAM,CAAAC,MAAM,CAAGD,KAAK,CAACC,MAA0B,CAC/C,KAAM,CAAAC,KAAK,CAAGD,MAAM,CAACC,KAAK,CAE1B,GAAI,CAACA,KAAK,EAAIA,KAAK,CAACC,MAAM,GAAK,CAAC,CAAE,CAChCZ,OAAO,CAAC,CAAEa,QAAQ,CAAE,IAAK,CAAC,CAAC,CAC3BX,QAAQ,CAACY,IAAI,CAACC,WAAW,CAACd,KAAK,CAAC,CAChC,OACF,CAEA,KAAM,CAAAe,IAAI,CAAGL,KAAK,CAAC,CAAC,CAAC,CACrB,KAAM,CAAAM,MAAM,CAAG,GAAI,CAAAC,UAAU,CAAC,CAAC,CAE/BD,MAAM,CAACE,MAAM,CAAIC,CAAC,EAAK,CACrB,KAAM,CAAAC,GAAG,CAAGD,CAAC,CAACV,MAAM,EAAEY,MAAgB,CACtCtB,OAAO,CAAC,CACNa,QAAQ,CAAE,KAAK,CACfU,MAAM,CAAE,CACN,CACEF,GAAG,CACHjB,IAAI,CAAEY,IAAI,CAACZ,IAAI,CACfoB,IAAI,CAAER,IAAI,CAACQ,IAAI,CACfR,IACF,CAAC,CAEL,CAAC,CAAC,CACFd,QAAQ,CAACY,IAAI,CAACC,WAAW,CAACd,KAAK,CAAC,CAClC,CAAC,CAEDgB,MAAM,CAACQ,OAAO,CAAG,IAAM,CACrBzB,OAAO,CAAC,CAAEa,QAAQ,CAAE,IAAK,CAAC,CAAC,CAC3BX,QAAQ,CAACY,IAAI,CAACC,WAAW,CAACd,KAAK,CAAC,CAClC,CAAC,CAGDgB,MAAM,CAACS,aAAa,CAACV,IAAI,CAAC,CAC5B,CAAC,CAGDd,QAAQ,CAACY,IAAI,CAACa,WAAW,CAAC1B,KAAK,CAAC,CAChCA,KAAK,CAAC2B,KAAK,CAAC,CAAC,CACf,CAAC,CAAC,CACJ,CAKA,KAAM,CAAAC,mCAAmCA,CAAA,CAAG,CAC1C,MAAO,CAAEC,MAAM,CAAE,SAAU,CAAC,CAC9B,CACF,CAGA,MAAO,MAAM,CAAAC,gBAAgB,CAAG,CAC9BC,MAAM,CAAE,QAAQ,CAChBC,MAAM,CAAE,QAAQ,CAChBC,GAAG,CAAE,KACP,CAAC,CAED,cAAe,IAAI,CAAAtC,kBAAkB,CAAC,CAAC","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}