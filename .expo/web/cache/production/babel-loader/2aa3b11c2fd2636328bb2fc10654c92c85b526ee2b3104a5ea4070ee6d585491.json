{"ast":null,"code":"import{initializeApp}from\"firebase/app\";import{getAuth}from\"firebase/auth\";import{getFirestore}from\"firebase/firestore\";import{getStorage}from\"firebase/storage\";const firebaseConfig={apiKey:\"YOUR_API_KEY\",authDomain:\"your-app.firebaseapp.com\",projectId:\"your-app\",storageBucket:\"your-app.appspot.com\",messagingSenderId:\"YOUR_MESSAGING_SENDER_ID\",appId:\"YOUR_APP_ID\"};let app,auth,db,storage;try{app=initializeApp(firebaseConfig);auth=getAuth(app);db=getFirestore(app);storage=getStorage(app);console.log(\"Firebase initialized successfully\");}catch(error){console.error(\"Error initializing Firebase:\",error);auth={currentUser:null,onAuthStateChanged:callback=>{callback(null);return()=>{};},signInWithEmailAndPassword:()=>Promise.reject(new Error(\"Firebase not initialized\")),createUserWithEmailAndPassword:()=>Promise.reject(new Error(\"Firebase not initialized\")),signOut:()=>Promise.reject(new Error(\"Firebase not initialized\"))};db={};storage={};}export{auth,db,storage};","map":{"version":3,"names":["initializeApp","getAuth","getFirestore","getStorage","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","app","auth","db","storage","console","log","error","currentUser","onAuthStateChanged","callback","signInWithEmailAndPassword","Promise","reject","Error","createUserWithEmailAndPassword","signOut"],"sources":["C:/Users/user/Desktop/projects/life/Yo/yovibe-web/src/config/firebase.ts"],"sourcesContent":["import { initializeApp } from \"firebase/app\"\nimport { getAuth } from \"firebase/auth\"\nimport { getFirestore } from \"firebase/firestore\"\nimport { getStorage } from \"firebase/storage\"\n\n// Your web app's Firebase configuration\n// Replace with your actual Firebase config\nconst firebaseConfig = {\n  apiKey: \"YOUR_API_KEY\",\n  authDomain: \"your-app.firebaseapp.com\",\n  projectId: \"your-app\",\n  storageBucket: \"your-app.appspot.com\",\n  messagingSenderId: \"YOUR_MESSAGING_SENDER_ID\",\n  appId: \"YOUR_APP_ID\",\n}\n\n// Initialize Firebase\nlet app, auth, db, storage\n\ntry {\n  // Initialize Firebase\n  app = initializeApp(firebaseConfig)\n  auth = getAuth(app)\n  db = getFirestore(app)\n  storage = getStorage(app)\n\n  console.log(\"Firebase initialized successfully\")\n} catch (error) {\n  console.error(\"Error initializing Firebase:\", error)\n\n  // Create mock implementations for development\n  auth = {\n    currentUser: null,\n    onAuthStateChanged: (callback) => {\n      callback(null)\n      return () => {}\n    },\n    signInWithEmailAndPassword: () => Promise.reject(new Error(\"Firebase not initialized\")),\n    createUserWithEmailAndPassword: () => Promise.reject(new Error(\"Firebase not initialized\")),\n    signOut: () => Promise.reject(new Error(\"Firebase not initialized\")),\n  } as any\n\n  db = {} as any\n  storage = {} as any\n}\n\n// Export the Firebase services\nexport { auth, db, storage }\n"],"mappings":"AAAA,OAASA,aAAa,KAAQ,cAAc,CAC5C,OAASC,OAAO,KAAQ,eAAe,CACvC,OAASC,YAAY,KAAQ,oBAAoB,CACjD,OAASC,UAAU,KAAQ,kBAAkB,CAI7C,KAAM,CAAAC,cAAc,CAAG,CACrBC,MAAM,CAAE,cAAc,CACtBC,UAAU,CAAE,0BAA0B,CACtCC,SAAS,CAAE,UAAU,CACrBC,aAAa,CAAE,sBAAsB,CACrCC,iBAAiB,CAAE,0BAA0B,CAC7CC,KAAK,CAAE,aACT,CAAC,CAGD,GAAI,CAAAC,GAAG,CAAEC,IAAI,CAAEC,EAAE,CAAEC,OAAO,CAE1B,GAAI,CAEFH,GAAG,CAAGX,aAAa,CAACI,cAAc,CAAC,CACnCQ,IAAI,CAAGX,OAAO,CAACU,GAAG,CAAC,CACnBE,EAAE,CAAGX,YAAY,CAACS,GAAG,CAAC,CACtBG,OAAO,CAAGX,UAAU,CAACQ,GAAG,CAAC,CAEzBI,OAAO,CAACC,GAAG,CAAC,mCAAmC,CAAC,CAClD,CAAE,MAAOC,KAAK,CAAE,CACdF,OAAO,CAACE,KAAK,CAAC,8BAA8B,CAAEA,KAAK,CAAC,CAGpDL,IAAI,CAAG,CACLM,WAAW,CAAE,IAAI,CACjBC,kBAAkB,CAAGC,QAAQ,EAAK,CAChCA,QAAQ,CAAC,IAAI,CAAC,CACd,MAAO,IAAM,CAAC,CAAC,CACjB,CAAC,CACDC,0BAA0B,CAAEA,CAAA,GAAMC,OAAO,CAACC,MAAM,CAAC,GAAI,CAAAC,KAAK,CAAC,0BAA0B,CAAC,CAAC,CACvFC,8BAA8B,CAAEA,CAAA,GAAMH,OAAO,CAACC,MAAM,CAAC,GAAI,CAAAC,KAAK,CAAC,0BAA0B,CAAC,CAAC,CAC3FE,OAAO,CAAEA,CAAA,GAAMJ,OAAO,CAACC,MAAM,CAAC,GAAI,CAAAC,KAAK,CAAC,0BAA0B,CAAC,CACrE,CAAQ,CAERX,EAAE,CAAG,CAAC,CAAQ,CACdC,OAAO,CAAG,CAAC,CAAQ,CACrB,CAGA,OAASF,IAAI,CAAEC,EAAE,CAAEC,OAAO","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}