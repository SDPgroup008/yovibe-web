{"ast":null,"code":"import\"react-native-get-random-values\";import{collection,addDoc,getDoc,getDocs,doc,query,where,updateDoc,deleteDoc,Timestamp}from\"firebase/firestore\";import{createUserWithEmailAndPassword,signInWithEmailAndPassword,signOut as firebaseSignOut}from\"firebase/auth\";import{ref,uploadBytes,getDownloadURL,uploadString}from\"firebase/storage\";import{auth,db,storage}from\"../config/firebase\";import{v4 as uuidv4}from\"uuid\";import{isDevelopment}from\"../utils/env\";class FirebaseService{async signUp(email,password,userType){try{console.log(\"FirebaseService: Signing up user\",email,\"as\",userType);const userCredential=await createUserWithEmailAndPassword(auth,email,password);const{uid}=userCredential.user;console.log(\"FirebaseService: User created with UID\",uid);const userRef=await addDoc(collection(db,\"users\"),{uid,email,userType,createdAt:Timestamp.now(),lastLoginAt:Timestamp.now()});console.log(\"FirebaseService: User profile created with ID\",userRef.id);return;}catch(error){console.error(\"FirebaseService: Error signing up:\",error);throw error;}}async signIn(email,password){try{console.log(\"FirebaseService: Signing in user\",email);await signInWithEmailAndPassword(auth,email,password);console.log(\"FirebaseService: Sign in successful\");return;}catch(error){console.error(\"FirebaseService: Error signing in:\",error);throw error;}}async signOut(){try{console.log(\"FirebaseService: Signing out user\");await firebaseSignOut(auth);console.log(\"FirebaseService: Sign out successful\");return;}catch(error){console.error(\"FirebaseService: Error signing out:\",error);throw error;}}async getUserProfile(uid){try{console.log(\"FirebaseService: Getting user profile for UID\",uid);const usersRef=collection(db,\"users\");const q=query(usersRef,where(\"uid\",\"==\",uid));const querySnapshot=await getDocs(q);if(querySnapshot.empty){console.error(\"FirebaseService: User not found for UID\",uid);throw new Error(\"User not found\");}const userDoc=querySnapshot.docs[0];const userData=userDoc.data();console.log(\"FirebaseService: User profile found\",userDoc.id);return{id:userDoc.id,uid:userData.uid,email:userData.email,userType:userData.userType,displayName:userData.displayName,photoURL:userData.photoURL,venueId:userData.venueId,isFrozen:userData.isFrozen,createdAt:userData.createdAt.toDate(),lastLoginAt:userData.lastLoginAt.toDate()};}catch(error){console.error(\"FirebaseService: Error getting user profile:\",error);throw error;}}async getCurrentUser(){try{const currentUser=auth.currentUser;if(!currentUser){console.log(\"FirebaseService: No current user\");return null;}console.log(\"FirebaseService: Getting current user profile for\",currentUser.email);return await this.getUserProfile(currentUser.uid);}catch(error){console.error(\"FirebaseService: Error getting current user:\",error);throw error;}}async updateUserProfile(userId,data){try{console.log(\"FirebaseService: Updating user profile\",userId);const userRef=doc(db,\"users\",userId);await updateDoc(userRef,Object.assign({},data,{lastLoginAt:Timestamp.now()}));console.log(\"FirebaseService: User profile updated\");return;}catch(error){console.error(\"FirebaseService: Error updating user profile:\",error);throw error;}}async getVenues(){try{console.log(\"FirebaseService: Getting venues\");if(isDevelopment()){try{const venuesRef=collection(db,\"venues\");const querySnapshot=await getDocs(venuesRef);if(querySnapshot.empty){console.log(\"FirebaseService: No venues found, returning mock data\");return this.getMockVenues();}const venues=[];querySnapshot.forEach(doc=>{const data=doc.data();venues.push({id:doc.id,name:data.name,location:data.location,description:data.description,backgroundImageUrl:data.backgroundImageUrl,categories:data.categories,vibeRating:data.vibeRating,todayImages:data.todayImages||[],latitude:data.latitude,longitude:data.longitude,weeklyPrograms:data.weeklyPrograms||{},ownerId:data.ownerId,createdAt:data.createdAt.toDate()});});console.log(\"FirebaseService: Found\",venues.length,\"venues\");return venues;}catch(error){console.warn(\"FirebaseService: Error getting venues, returning mock data:\",error);return this.getMockVenues();}}const venuesRef=collection(db,\"venues\");const querySnapshot=await getDocs(venuesRef);const venues=[];querySnapshot.forEach(doc=>{const data=doc.data();venues.push({id:doc.id,name:data.name,location:data.location,description:data.description,backgroundImageUrl:data.backgroundImageUrl,categories:data.categories,vibeRating:data.vibeRating,todayImages:data.todayImages||[],latitude:data.latitude,longitude:data.longitude,weeklyPrograms:data.weeklyPrograms||{},ownerId:data.ownerId,createdAt:data.createdAt.toDate()});});console.log(\"FirebaseService: Found\",venues.length,\"venues\");return venues;}catch(error){console.error(\"FirebaseService: Error getting venues:\",error);throw error;}}getMockVenues(){return[{id:\"venue1\",name:\"Club Neon\",location:\"123 Main St, Downtown\",description:\"The hottest nightclub in town with amazing DJs and dance floors.\",backgroundImageUrl:\"https://images.unsplash.com/photo-1566737236500-c8ac43014a67?ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80\",categories:[\"Nightclub\",\"Dance\",\"EDM\"],vibeRating:4.8,latitude:40.7128,longitude:-74.006,weeklyPrograms:{Monday:\"Closed\",Tuesday:\"Techno Tuesday with DJ Max\",Wednesday:\"Ladies Night - Free entry for ladies\",Thursday:\"Throwback Thursday - 90s and 00s hits\",Friday:\"International DJs and VIP tables\",Saturday:\"Club Neon Signature Night\",Sunday:\"Sunday Chill Sessions\"},ownerId:\"owner1\",createdAt:new Date()},{id:\"venue2\",name:\"Jazz & Whiskey\",location:\"456 Oak Ave, Midtown\",description:\"Sophisticated jazz bar with premium whiskey selection and live performances.\",backgroundImageUrl:\"https://images.unsplash.com/photo-1514933651103-005eec06c04b?ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80\",categories:[\"Jazz\",\"Bar\",\"Live Music\"],vibeRating:4.5,latitude:40.7308,longitude:-73.9973,weeklyPrograms:{Monday:\"Closed\",Tuesday:\"Amateur Jazz Night\",Wednesday:\"Whiskey Tasting Event\",Thursday:\"Classic Jazz Quartet\",Friday:\"Featured Artist Performance\",Saturday:\"Premium Jazz Experience\",Sunday:\"Sunday Blues & Soul\"},ownerId:\"owner2\",createdAt:new Date()},{id:\"venue3\",name:\"Rooftop Lounge\",location:\"789 Skyview Dr, Uptown\",description:\"Elegant rooftop bar with panoramic city views and craft cocktails.\",backgroundImageUrl:\"https://images.unsplash.com/photo-1517457373958-b7bdd4587205?ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80\",categories:[\"Lounge\",\"Rooftop\",\"Cocktails\"],vibeRating:4.7,latitude:40.758,longitude:-73.9855,weeklyPrograms:{Monday:\"Monday Sunset Sessions\",Tuesday:\"Taco & Tequila Tuesday\",Wednesday:\"Wine Down Wednesday\",Thursday:\"Acoustic Live Sets\",Friday:\"DJ & Dancing under the Stars\",Saturday:\"VIP Bottle Service Night\",Sunday:\"Sunday Brunch & Beats\"},ownerId:\"owner3\",createdAt:new Date()}];}async getVenuesByOwner(ownerId){try{const venuesRef=collection(db,\"venues\");const q=query(venuesRef,where(\"ownerId\",\"==\",ownerId));const querySnapshot=await getDocs(q);const venues=[];querySnapshot.forEach(doc=>{const data=doc.data();venues.push({id:doc.id,name:data.name,location:data.location,description:data.description,backgroundImageUrl:data.backgroundImageUrl,categories:data.categories,vibeRating:data.vibeRating,todayImages:data.todayImages||[],latitude:data.latitude,longitude:data.longitude,weeklyPrograms:data.weeklyPrograms||{},ownerId:data.ownerId,createdAt:data.createdAt.toDate()});});return venues;}catch(error){console.error(\"Error getting venues by owner:\",error);throw error;}}async getVenueById(venueId){try{const venueRef=doc(db,\"venues\",venueId);const venueDoc=await getDoc(venueRef);if(!venueDoc.exists()){return null;}const data=venueDoc.data();return{id:venueDoc.id,name:data.name,location:data.location,description:data.description,backgroundImageUrl:data.backgroundImageUrl,categories:data.categories,vibeRating:data.vibeRating,todayImages:data.todayImages||[],latitude:data.latitude,longitude:data.longitude,weeklyPrograms:data.weeklyPrograms||{},ownerId:data.ownerId,createdAt:data.createdAt.toDate()};}catch(error){console.error(\"Error getting venue by ID:\",error);throw error;}}async addVenue(venueData){try{const venueRef=await addDoc(collection(db,\"venues\"),Object.assign({},venueData,{createdAt:Timestamp.fromDate(venueData.createdAt)}));return venueRef.id;}catch(error){console.error(\"Error adding venue:\",error);throw error;}}async updateVenue(venueId,data){try{const venueRef=doc(db,\"venues\",venueId);await updateDoc(venueRef,data);return;}catch(error){console.error(\"Error updating venue:\",error);throw error;}}async updateVenuePrograms(venueId,programs){try{const venueRef=doc(db,\"venues\",venueId);await updateDoc(venueRef,{weeklyPrograms:programs});return;}catch(error){console.error(\"Error updating venue programs:\",error);throw error;}}async deleteEventsByVenue(venueId){try{console.log(\"FirebaseService: Deleting events for venue\",venueId);const eventsRef=collection(db,\"events\");const q=query(eventsRef,where(\"venueId\",\"==\",venueId));const querySnapshot=await getDocs(q);const deletePromises=[];querySnapshot.forEach(doc=>{deletePromises.push(deleteDoc(doc.ref));});await Promise.all(deletePromises);console.log(`FirebaseService: Deleted ${deletePromises.length} events for venue ${venueId}`);return;}catch(error){console.error(\"Error deleting events by venue:\",error);throw error;}}async deleteVenue(venueId){try{console.log(\"FirebaseService: Deleting venue\",venueId);const venueRef=doc(db,\"venues\",venueId);const venueDoc=await getDoc(venueRef);if(venueDoc.exists()){await deleteDoc(venueRef);console.log(\"FirebaseService: Venue deleted successfully\");}else{console.warn(\"FirebaseService: Venue not found\",venueId);}return;}catch(error){console.error(\"Error deleting venue:\",error);throw error;}}async getEvents(){try{console.log(\"FirebaseService: Getting events\");try{const eventsRef=collection(db,\"events\");const querySnapshot=await getDocs(eventsRef);const events=[];querySnapshot.forEach(doc=>{const data=doc.data();const eventDate=data.date.toDate();if(eventDate>=new Date()){events.push({id:doc.id,name:data.name,venueId:data.venueId,venueName:data.venueName,description:data.description,date:eventDate,posterImageUrl:data.posterImageUrl,artists:data.artists,isFeatured:data.isFeatured,location:data.location,priceIndicator:data.priceIndicator||1,attendees:data.attendees||[],createdAt:data.createdAt.toDate(),createdBy:data.createdBy,createdByType:data.createdByType});}});console.log(\"FirebaseService: Found\",events.length,\"events\");const sortedEvents=events.sort((a,b)=>{return a.date.getTime()-b.date.getTime();});return sortedEvents;}catch(error){console.error(\"Error getting events from Firestore:\",error);if(isDevelopment()){console.warn(\"Development mode: Returning empty events array\");return[];}else{throw error;}}}catch(error){console.error(\"Error getting events:\",error);throw error;}}async getFeaturedEvents(){try{const eventsRef=collection(db,\"events\");const q=query(eventsRef,where(\"isFeatured\",\"==\",true));const querySnapshot=await getDocs(q);const events=[];querySnapshot.forEach(doc=>{const data=doc.data();const eventDate=data.date.toDate();if(eventDate>=new Date()){events.push({id:doc.id,name:data.name,venueId:data.venueId,venueName:data.venueName,description:data.description,date:eventDate,posterImageUrl:data.posterImageUrl,artists:data.artists,isFeatured:data.isFeatured,location:data.location,priceIndicator:data.priceIndicator||1,attendees:data.attendees||[],createdAt:data.createdAt.toDate(),createdBy:data.createdBy,createdByType:data.createdByType});}});return events;}catch(error){console.error(\"Error getting featured events:\",error);return[];}}async getEventsByVenue(venueId){try{const eventsRef=collection(db,\"events\");const q=query(eventsRef,where(\"venueId\",\"==\",venueId));const querySnapshot=await getDocs(q);const events=[];querySnapshot.forEach(doc=>{const data=doc.data();const eventDate=data.date.toDate();if(eventDate>=new Date()){events.push({id:doc.id,name:data.name,venueId:data.venueId,venueName:data.venueName,description:data.description,date:eventDate,posterImageUrl:data.posterImageUrl,artists:data.artists,isFeatured:data.isFeatured,location:data.location,priceIndicator:data.priceIndicator||1,attendees:data.attendees||[],createdAt:data.createdAt.toDate(),createdBy:data.createdBy,createdByType:data.createdByType});}});return events;}catch(error){console.error(\"Error getting events by venue:\",error);throw error;}}async getEventById(eventId){try{const eventRef=doc(db,\"events\",eventId);const eventDoc=await getDoc(eventRef);if(!eventDoc.exists()){return null;}const data=eventDoc.data();return{id:eventDoc.id,name:data.name,venueId:data.venueId,venueName:data.venueName,description:data.description,date:data.date.toDate(),posterImageUrl:data.posterImageUrl,artists:data.artists,isFeatured:data.isFeatured,location:data.location,priceIndicator:data.priceIndicator||1,attendees:data.attendees||[],createdAt:data.createdAt.toDate(),createdBy:data.createdBy,createdByType:data.createdByType};}catch(error){console.error(\"Error getting event by ID:\",error);throw error;}}async addEvent(eventData){try{const firestoreEventData={name:eventData.name,venueId:eventData.venueId,venueName:eventData.venueName,description:eventData.description,date:Timestamp.fromDate(eventData.date),posterImageUrl:eventData.posterImageUrl,artists:eventData.artists,isFeatured:eventData.isFeatured,location:eventData.location,priceIndicator:eventData.priceIndicator,entryFee:eventData.entryFee,attendees:eventData.attendees||[],createdAt:Timestamp.fromDate(new Date()),createdBy:eventData.createdBy,createdByType:eventData.createdByType};const eventRef=await addDoc(collection(db,\"events\"),firestoreEventData);return eventRef.id;}catch(error){console.error(\"Error adding event:\",error);throw error;}}async updateEvent(eventId,data){try{const eventRef=doc(db,\"events\",eventId);const firestoreData=Object.assign({},data);if(data.date){firestoreData.date=Timestamp.fromDate(data.date);}await updateDoc(eventRef,firestoreData);return;}catch(error){console.error(\"Error updating event:\",error);throw error;}}async deleteEvent(eventId){try{console.log(\"FirebaseService: Deleting event\",eventId);const eventRef=doc(db,\"events\",eventId);const eventDoc=await getDoc(eventRef);if(eventDoc.exists()){await deleteDoc(eventRef);console.log(\"FirebaseService: Event deleted successfully\");}else{console.warn(\"FirebaseService: Event not found\",eventId);}return;}catch(error){console.error(\"Error deleting event:\",error);throw error;}}async deletePastEvents(){try{console.log(\"FirebaseService: Deleting past events\");const today=new Date();today.setHours(0,0,0,0);const eventsRef=collection(db,\"events\");const querySnapshot=await getDocs(eventsRef);const deletePromises=[];querySnapshot.forEach(doc=>{const data=doc.data();const eventDate=data.date.toDate();if(eventDate<today){console.log(`FirebaseService: Deleting past event: ${data.name} (${eventDate.toDateString()})`);deletePromises.push(this.deleteEvent(doc.id));}});await Promise.all(deletePromises);console.log(`FirebaseService: Deleted ${deletePromises.length} past events`);}catch(error){console.error(\"Error deleting past events:\",error);throw error;}}async uploadVenueImage(uri){try{console.log(\"FirebaseService: Uploading venue image\");if(uri.startsWith(\"http\")&&!uri.startsWith(\"data:\")){console.log(\"FirebaseService: Image is already a URL, returning directly\");return uri;}if(isDevelopment()){return\"https://images.unsplash.com/photo-1566737236500-c8ac43014a67?ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80\";}const filename=`venues/${uuidv4()}`;const storageRef=ref(storage,filename);if(uri.startsWith(\"data:\")){await uploadString(storageRef,uri,\"data_url\");const downloadUrl=await getDownloadURL(storageRef);return downloadUrl;}const response=await fetch(uri);const blob=await response.blob();const uploadResult=await uploadBytes(storageRef,blob);const downloadUrl=await getDownloadURL(uploadResult.ref);return downloadUrl;}catch(error){console.error(\"FirebaseService: Error uploading venue image:\",error);return\"https://images.unsplash.com/photo-1566737236500-c8ac43014a67?ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80\";}}async uploadEventImage(uri){try{console.log(\"FirebaseService: Uploading event image\",uri.substring(0,50)+\"...\");if(uri.startsWith(\"http\")&&!uri.startsWith(\"data:\")){console.log(\"FirebaseService: Image is already a URL, returning directly\");return uri;}const filename=`events/${uuidv4()}`;const storageRef=ref(storage,filename);if(uri.startsWith(\"data:\")){console.log(\"FirebaseService: Uploading data URL\");await uploadString(storageRef,uri,\"data_url\");const downloadUrl=await getDownloadURL(storageRef);console.log(\"FirebaseService: Upload successful, URL:\",downloadUrl.substring(0,50)+\"...\");return downloadUrl;}console.log(\"FirebaseService: Fetching image data\");const response=await fetch(uri);const blob=await response.blob();console.log(\"FirebaseService: Uploading blob to Firebase Storage\");const uploadResult=await uploadBytes(storageRef,blob);const downloadUrl=await getDownloadURL(uploadResult.ref);console.log(\"FirebaseService: Upload successful, URL:\",downloadUrl.substring(0,50)+\"...\");return downloadUrl;}catch(error){console.error(\"FirebaseService: Error uploading event image:\",error);if(isDevelopment()){console.warn(\"FirebaseService: Using placeholder image due to error\");return\"https://images.unsplash.com/photo-1514525253161-7a46d19cd819?ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80\";}throw error;}}async getAllUsers(){try{const usersRef=collection(db,\"users\");const querySnapshot=await getDocs(usersRef);const users=[];querySnapshot.forEach(doc=>{const data=doc.data();users.push({id:doc.id,uid:data.uid,email:data.email,userType:data.userType,displayName:data.displayName,photoURL:data.photoURL,venueId:data.venueId,isFrozen:data.isFrozen,createdAt:data.createdAt.toDate(),lastLoginAt:data.lastLoginAt.toDate()});});return users;}catch(error){console.error(\"Error getting all users:\",error);throw error;}}async getClubOwners(){try{const usersRef=collection(db,\"users\");const q=query(usersRef,where(\"userType\",\"==\",\"club_owner\"));const querySnapshot=await getDocs(q);const users=[];querySnapshot.forEach(doc=>{const data=doc.data();users.push({id:doc.id,uid:data.uid,email:data.email,userType:data.userType,displayName:data.displayName,photoURL:data.photoURL,venueId:data.venueId,isFrozen:data.isFrozen,createdAt:data.createdAt.toDate(),lastLoginAt:data.lastLoginAt.toDate()});});return users;}catch(error){console.error(\"Error getting club owners:\",error);throw error;}}async freezeUser(userId,isFrozen){try{const userRef=doc(db,\"users\",userId);await updateDoc(userRef,{isFrozen});return;}catch(error){console.error(\"Error freezing/unfreezing user:\",error);throw error;}}async deleteUser(userId){try{console.log(\"FirebaseService: Deleting user\",userId);const userRef=doc(db,\"users\",userId);const userDoc=await getDoc(userRef);if(userDoc.exists()){const userData=userDoc.data();if(userData.userType===\"club_owner\"){const venuesRef=collection(db,\"venues\");const q=query(venuesRef,where(\"ownerId\",\"==\",userId));const venueSnapshot=await getDocs(q);const venueDeletePromises=[];venueSnapshot.forEach(venueDoc=>{venueDeletePromises.push(this.deleteEventsByVenue(venueDoc.id));venueDeletePromises.push(deleteDoc(venueDoc.ref));});await Promise.all(venueDeletePromises);console.log(`FirebaseService: Deleted ${venueSnapshot.size} venues for user ${userId}`);}const eventsRef=collection(db,\"events\");const eventsQuery=query(eventsRef,where(\"createdBy\",\"==\",userId));const eventsSnapshot=await getDocs(eventsQuery);const eventDeletePromises=[];eventsSnapshot.forEach(eventDoc=>{eventDeletePromises.push(deleteDoc(eventDoc.ref));});await Promise.all(eventDeletePromises);console.log(`FirebaseService: Deleted ${eventsSnapshot.size} events created by user ${userId}`);}await deleteDoc(userRef);console.log(\"FirebaseService: User deleted successfully\");return;}catch(error){console.error(\"Error deleting user:\",error);throw error;}}}export default new FirebaseService();","map":{"version":3,"names":["collection","addDoc","getDoc","getDocs","doc","query","where","updateDoc","deleteDoc","Timestamp","createUserWithEmailAndPassword","signInWithEmailAndPassword","signOut","firebaseSignOut","ref","uploadBytes","getDownloadURL","uploadString","auth","db","storage","v4","uuidv4","isDevelopment","FirebaseService","signUp","email","password","userType","console","log","userCredential","uid","user","userRef","createdAt","now","lastLoginAt","id","error","signIn","getUserProfile","usersRef","q","querySnapshot","empty","Error","userDoc","docs","userData","data","displayName","photoURL","venueId","isFrozen","toDate","getCurrentUser","currentUser","updateUserProfile","userId","Object","assign","getVenues","venuesRef","getMockVenues","venues","forEach","push","name","location","description","backgroundImageUrl","categories","vibeRating","todayImages","latitude","longitude","weeklyPrograms","ownerId","length","warn","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday","Date","getVenuesByOwner","getVenueById","venueRef","venueDoc","exists","addVenue","venueData","fromDate","updateVenue","updateVenuePrograms","programs","deleteEventsByVenue","eventsRef","deletePromises","Promise","all","deleteVenue","getEvents","events","eventDate","date","venueName","posterImageUrl","artists","isFeatured","priceIndicator","attendees","createdBy","createdByType","sortedEvents","sort","a","b","getTime","getFeaturedEvents","getEventsByVenue","getEventById","eventId","eventRef","eventDoc","addEvent","eventData","firestoreEventData","entryFee","updateEvent","firestoreData","deleteEvent","deletePastEvents","today","setHours","toDateString","uploadVenueImage","uri","startsWith","filename","storageRef","downloadUrl","response","fetch","blob","uploadResult","uploadEventImage","substring","getAllUsers","users","getClubOwners","freezeUser","deleteUser","venueSnapshot","venueDeletePromises","size","eventsQuery","eventsSnapshot","eventDeletePromises"],"sources":["C:/Users/user/Desktop/projects/life/Yo/yovibe-web/src/services/FirebaseService.ts"],"sourcesContent":["import \"react-native-get-random-values\" // Add this import at the top\nimport {\n  collection,\n  addDoc,\n  getDoc,\n  getDocs,\n  doc,\n  query,\n  where,\n  updateDoc,\n  deleteDoc,\n  Timestamp,\n} from \"firebase/firestore\"\nimport { createUserWithEmailAndPassword, signInWithEmailAndPassword, signOut as firebaseSignOut } from \"firebase/auth\"\nimport { ref, uploadBytes, getDownloadURL, uploadString } from \"firebase/storage\"\nimport { auth, db, storage } from \"../config/firebase\"\nimport type { User, UserType } from \"../models/User\"\nimport type { Venue } from \"../models/Venue\"\nimport type { Event } from \"../models/Event\"\nimport { v4 as uuidv4 } from \"uuid\"\nimport { isDevelopment } from \"../utils/env\"\n\nclass FirebaseService {\n  // Auth methods\n  async signUp(email: string, password: string, userType: UserType): Promise<void> {\n    try {\n      console.log(\"FirebaseService: Signing up user\", email, \"as\", userType)\n      const userCredential = await createUserWithEmailAndPassword(auth, email, password)\n      const { uid } = userCredential.user\n      console.log(\"FirebaseService: User created with UID\", uid)\n\n      // Create user profile in Firestore\n      const userRef = await addDoc(collection(db, \"users\"), {\n        uid,\n        email,\n        userType,\n        createdAt: Timestamp.now(),\n        lastLoginAt: Timestamp.now(),\n      })\n      console.log(\"FirebaseService: User profile created with ID\", userRef.id)\n\n      return\n    } catch (error) {\n      console.error(\"FirebaseService: Error signing up:\", error)\n      throw error\n    }\n  }\n\n  async signIn(email: string, password: string): Promise<void> {\n    try {\n      console.log(\"FirebaseService: Signing in user\", email)\n      await signInWithEmailAndPassword(auth, email, password)\n      console.log(\"FirebaseService: Sign in successful\")\n      return\n    } catch (error) {\n      console.error(\"FirebaseService: Error signing in:\", error)\n      throw error\n    }\n  }\n\n  async signOut(): Promise<void> {\n    try {\n      console.log(\"FirebaseService: Signing out user\")\n      await firebaseSignOut(auth)\n      console.log(\"FirebaseService: Sign out successful\")\n      return\n    } catch (error) {\n      console.error(\"FirebaseService: Error signing out:\", error)\n      throw error\n    }\n  }\n\n  // User methods\n  async getUserProfile(uid: string): Promise<User> {\n    try {\n      console.log(\"FirebaseService: Getting user profile for UID\", uid)\n      const usersRef = collection(db, \"users\")\n      const q = query(usersRef, where(\"uid\", \"==\", uid))\n      const querySnapshot = await getDocs(q)\n\n      if (querySnapshot.empty) {\n        console.error(\"FirebaseService: User not found for UID\", uid)\n        throw new Error(\"User not found\")\n      }\n\n      const userDoc = querySnapshot.docs[0]\n      const userData = userDoc.data()\n      console.log(\"FirebaseService: User profile found\", userDoc.id)\n\n      return {\n        id: userDoc.id,\n        uid: userData.uid,\n        email: userData.email,\n        userType: userData.userType,\n        displayName: userData.displayName,\n        photoURL: userData.photoURL,\n        venueId: userData.venueId,\n        isFrozen: userData.isFrozen,\n        createdAt: userData.createdAt.toDate(),\n        lastLoginAt: userData.lastLoginAt.toDate(),\n      }\n    } catch (error) {\n      console.error(\"FirebaseService: Error getting user profile:\", error)\n      throw error\n    }\n  }\n\n  async getCurrentUser(): Promise<User | null> {\n    try {\n      const currentUser = auth.currentUser\n      if (!currentUser) {\n        console.log(\"FirebaseService: No current user\")\n        return null\n      }\n\n      console.log(\"FirebaseService: Getting current user profile for\", currentUser.email)\n      return await this.getUserProfile(currentUser.uid)\n    } catch (error) {\n      console.error(\"FirebaseService: Error getting current user:\", error)\n      throw error\n    }\n  }\n\n  async updateUserProfile(userId: string, data: Partial<User>): Promise<void> {\n    try {\n      console.log(\"FirebaseService: Updating user profile\", userId)\n      const userRef = doc(db, \"users\", userId)\n      await updateDoc(userRef, {\n        ...data,\n        lastLoginAt: Timestamp.now(),\n      })\n      console.log(\"FirebaseService: User profile updated\")\n      return\n    } catch (error) {\n      console.error(\"FirebaseService: Error updating user profile:\", error)\n      throw error\n    }\n  }\n\n  // Venue methods\n  async getVenues(): Promise<Venue[]> {\n    try {\n      console.log(\"FirebaseService: Getting venues\")\n\n      // For development/testing, return mock data if Firebase is not properly configured\n      if (isDevelopment()) {\n        try {\n          const venuesRef = collection(db, \"venues\")\n          const querySnapshot = await getDocs(venuesRef)\n\n          if (querySnapshot.empty) {\n            console.log(\"FirebaseService: No venues found, returning mock data\")\n            return this.getMockVenues()\n          }\n\n          const venues: Venue[] = []\n          querySnapshot.forEach((doc) => {\n            const data = doc.data()\n            venues.push({\n              id: doc.id,\n              name: data.name,\n              location: data.location,\n              description: data.description,\n              backgroundImageUrl: data.backgroundImageUrl,\n              categories: data.categories,\n              vibeRating: data.vibeRating,\n              todayImages: data.todayImages || [],\n              latitude: data.latitude,\n              longitude: data.longitude,\n              weeklyPrograms: data.weeklyPrograms || {},\n              ownerId: data.ownerId,\n              createdAt: data.createdAt.toDate(),\n            })\n          })\n\n          console.log(\"FirebaseService: Found\", venues.length, \"venues\")\n          return venues\n        } catch (error) {\n          console.warn(\"FirebaseService: Error getting venues, returning mock data:\", error)\n          return this.getMockVenues()\n        }\n      }\n\n      // Production code\n      const venuesRef = collection(db, \"venues\")\n      const querySnapshot = await getDocs(venuesRef)\n      const venues: Venue[] = []\n\n      querySnapshot.forEach((doc) => {\n        const data = doc.data()\n        venues.push({\n          id: doc.id,\n          name: data.name,\n          location: data.location,\n          description: data.description,\n          backgroundImageUrl: data.backgroundImageUrl,\n          categories: data.categories,\n          vibeRating: data.vibeRating,\n          todayImages: data.todayImages || [],\n          latitude: data.latitude,\n          longitude: data.longitude,\n          weeklyPrograms: data.weeklyPrograms || {},\n          ownerId: data.ownerId,\n          createdAt: data.createdAt.toDate(),\n        })\n      })\n\n      console.log(\"FirebaseService: Found\", venues.length, \"venues\")\n      return venues\n    } catch (error) {\n      console.error(\"FirebaseService: Error getting venues:\", error)\n      throw error\n    }\n  }\n\n  // Mock data for development/testing\n  private getMockVenues(): Venue[] {\n    return [\n      {\n        id: \"venue1\",\n        name: \"Club Neon\",\n        location: \"123 Main St, Downtown\",\n        description: \"The hottest nightclub in town with amazing DJs and dance floors.\",\n        backgroundImageUrl:\n          \"https://images.unsplash.com/photo-1566737236500-c8ac43014a67?ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80\",\n        categories: [\"Nightclub\", \"Dance\", \"EDM\"],\n        vibeRating: 4.8,\n        latitude: 40.7128,\n        longitude: -74.006,\n        weeklyPrograms: {\n          Monday: \"Closed\",\n          Tuesday: \"Techno Tuesday with DJ Max\",\n          Wednesday: \"Ladies Night - Free entry for ladies\",\n          Thursday: \"Throwback Thursday - 90s and 00s hits\",\n          Friday: \"International DJs and VIP tables\",\n          Saturday: \"Club Neon Signature Night\",\n          Sunday: \"Sunday Chill Sessions\",\n        },\n        ownerId: \"owner1\",\n        createdAt: new Date(),\n      },\n      {\n        id: \"venue2\",\n        name: \"Jazz & Whiskey\",\n        location: \"456 Oak Ave, Midtown\",\n        description: \"Sophisticated jazz bar with premium whiskey selection and live performances.\",\n        backgroundImageUrl:\n          \"https://images.unsplash.com/photo-1514933651103-005eec06c04b?ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80\",\n        categories: [\"Jazz\", \"Bar\", \"Live Music\"],\n        vibeRating: 4.5,\n        latitude: 40.7308,\n        longitude: -73.9973,\n        weeklyPrograms: {\n          Monday: \"Closed\",\n          Tuesday: \"Amateur Jazz Night\",\n          Wednesday: \"Whiskey Tasting Event\",\n          Thursday: \"Classic Jazz Quartet\",\n          Friday: \"Featured Artist Performance\",\n          Saturday: \"Premium Jazz Experience\",\n          Sunday: \"Sunday Blues & Soul\",\n        },\n        ownerId: \"owner2\",\n        createdAt: new Date(),\n      },\n      {\n        id: \"venue3\",\n        name: \"Rooftop Lounge\",\n        location: \"789 Skyview Dr, Uptown\",\n        description: \"Elegant rooftop bar with panoramic city views and craft cocktails.\",\n        backgroundImageUrl:\n          \"https://images.unsplash.com/photo-1517457373958-b7bdd4587205?ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80\",\n        categories: [\"Lounge\", \"Rooftop\", \"Cocktails\"],\n        vibeRating: 4.7,\n        latitude: 40.758,\n        longitude: -73.9855,\n        weeklyPrograms: {\n          Monday: \"Monday Sunset Sessions\",\n          Tuesday: \"Taco & Tequila Tuesday\",\n          Wednesday: \"Wine Down Wednesday\",\n          Thursday: \"Acoustic Live Sets\",\n          Friday: \"DJ & Dancing under the Stars\",\n          Saturday: \"VIP Bottle Service Night\",\n          Sunday: \"Sunday Brunch & Beats\",\n        },\n        ownerId: \"owner3\",\n        createdAt: new Date(),\n      },\n    ]\n  }\n\n  async getVenuesByOwner(ownerId: string): Promise<Venue[]> {\n    try {\n      const venuesRef = collection(db, \"venues\")\n      const q = query(venuesRef, where(\"ownerId\", \"==\", ownerId))\n      const querySnapshot = await getDocs(q)\n      const venues: Venue[] = []\n\n      querySnapshot.forEach((doc) => {\n        const data = doc.data()\n        venues.push({\n          id: doc.id,\n          name: data.name,\n          location: data.location,\n          description: data.description,\n          backgroundImageUrl: data.backgroundImageUrl,\n          categories: data.categories,\n          vibeRating: data.vibeRating,\n          todayImages: data.todayImages || [],\n          latitude: data.latitude,\n          longitude: data.longitude,\n          weeklyPrograms: data.weeklyPrograms || {},\n          ownerId: data.ownerId,\n          createdAt: data.createdAt.toDate(),\n        })\n      })\n\n      return venues\n    } catch (error) {\n      console.error(\"Error getting venues by owner:\", error)\n      throw error\n    }\n  }\n\n  async getVenueById(venueId: string): Promise<Venue | null> {\n    try {\n      const venueRef = doc(db, \"venues\", venueId)\n      const venueDoc = await getDoc(venueRef)\n\n      if (!venueDoc.exists()) {\n        return null\n      }\n\n      const data = venueDoc.data()\n      return {\n        id: venueDoc.id,\n        name: data.name,\n        location: data.location,\n        description: data.description,\n        backgroundImageUrl: data.backgroundImageUrl,\n        categories: data.categories,\n        vibeRating: data.vibeRating,\n        todayImages: data.todayImages || [],\n        latitude: data.latitude,\n        longitude: data.longitude,\n        weeklyPrograms: data.weeklyPrograms || {},\n        ownerId: data.ownerId,\n        createdAt: data.createdAt.toDate(),\n      }\n    } catch (error) {\n      console.error(\"Error getting venue by ID:\", error)\n      throw error\n    }\n  }\n\n  async addVenue(venueData: Omit<Venue, \"id\">): Promise<string> {\n    try {\n      const venueRef = await addDoc(collection(db, \"venues\"), {\n        ...venueData,\n        createdAt: Timestamp.fromDate(venueData.createdAt),\n      })\n\n      return venueRef.id\n    } catch (error) {\n      console.error(\"Error adding venue:\", error)\n      throw error\n    }\n  }\n\n  async updateVenue(venueId: string, data: Partial<Venue>): Promise<void> {\n    try {\n      const venueRef = doc(db, \"venues\", venueId)\n      await updateDoc(venueRef, data)\n      return\n    } catch (error) {\n      console.error(\"Error updating venue:\", error)\n      throw error\n    }\n  }\n\n  async updateVenuePrograms(venueId: string, programs: Record<string, string>): Promise<void> {\n    try {\n      const venueRef = doc(db, \"venues\", venueId)\n      await updateDoc(venueRef, { weeklyPrograms: programs })\n      return\n    } catch (error) {\n      console.error(\"Error updating venue programs:\", error)\n      throw error\n    }\n  }\n\n  // Add a new method to delete events by venue ID\n  async deleteEventsByVenue(venueId: string): Promise<void> {\n    try {\n      console.log(\"FirebaseService: Deleting events for venue\", venueId)\n\n      // Get all events for this venue\n      const eventsRef = collection(db, \"events\")\n      const q = query(eventsRef, where(\"venueId\", \"==\", venueId))\n      const querySnapshot = await getDocs(q)\n\n      // Delete each event\n      const deletePromises: Promise<void>[] = []\n      querySnapshot.forEach((doc) => {\n        deletePromises.push(deleteDoc(doc.ref))\n      })\n\n      await Promise.all(deletePromises)\n      console.log(`FirebaseService: Deleted ${deletePromises.length} events for venue ${venueId}`)\n      return\n    } catch (error) {\n      console.error(\"Error deleting events by venue:\", error)\n      throw error\n    }\n  }\n\n  // Enhance the deleteVenue method to also delete associated images\n  async deleteVenue(venueId: string): Promise<void> {\n    try {\n      console.log(\"FirebaseService: Deleting venue\", venueId)\n\n      // Get venue data to check for images\n      const venueRef = doc(db, \"venues\", venueId)\n      const venueDoc = await getDoc(venueRef)\n\n      if (venueDoc.exists()) {\n        // Delete the venue document\n        await deleteDoc(venueRef)\n        console.log(\"FirebaseService: Venue deleted successfully\")\n      } else {\n        console.warn(\"FirebaseService: Venue not found\", venueId)\n      }\n\n      return\n    } catch (error) {\n      console.error(\"Error deleting venue:\", error)\n      throw error\n    }\n  }\n\n  // Event methods\n  async getEvents(): Promise<Event[]> {\n    try {\n      console.log(\"FirebaseService: Getting events\")\n\n      // Always try to get real events from Firestore first\n      try {\n        const eventsRef = collection(db, \"events\")\n        const querySnapshot = await getDocs(eventsRef)\n        const events: Event[] = []\n\n        querySnapshot.forEach((doc) => {\n          const data = doc.data()\n          const eventDate = data.date.toDate()\n\n          // Only include future events\n          if (eventDate >= new Date()) {\n            events.push({\n              id: doc.id,\n              name: data.name,\n              venueId: data.venueId,\n              venueName: data.venueName,\n              description: data.description,\n              date: eventDate,\n              posterImageUrl: data.posterImageUrl,\n              artists: data.artists,\n              isFeatured: data.isFeatured,\n              location: data.location,\n              priceIndicator: data.priceIndicator || 1,\n              attendees: data.attendees || [],\n              createdAt: data.createdAt.toDate(),\n              createdBy: data.createdBy,\n              createdByType: data.createdByType,\n            })\n          }\n        })\n\n        console.log(\"FirebaseService: Found\", events.length, \"events\")\n\n        // Sort events by date (closest to today first)\n        const sortedEvents = events.sort((a, b) => {\n          return a.date.getTime() - b.date.getTime()\n        })\n\n        return sortedEvents\n      } catch (error) {\n        console.error(\"Error getting events from Firestore:\", error)\n\n        // Only in development mode and if Firestore fails, return an empty array\n        if (isDevelopment()) {\n          console.warn(\"Development mode: Returning empty events array\")\n          return []\n        } else {\n          throw error\n        }\n      }\n    } catch (error) {\n      console.error(\"Error getting events:\", error)\n      throw error\n    }\n  }\n\n  async getFeaturedEvents(): Promise<Event[]> {\n    try {\n      const eventsRef = collection(db, \"events\")\n      const q = query(eventsRef, where(\"isFeatured\", \"==\", true))\n      const querySnapshot = await getDocs(q)\n      const events: Event[] = []\n\n      querySnapshot.forEach((doc) => {\n        const data = doc.data()\n        const eventDate = data.date.toDate()\n\n        // Only include future events\n        if (eventDate >= new Date()) {\n          events.push({\n            id: doc.id,\n            name: data.name,\n            venueId: data.venueId,\n            venueName: data.venueName,\n            description: data.description,\n            date: eventDate,\n            posterImageUrl: data.posterImageUrl,\n            artists: data.artists,\n            isFeatured: data.isFeatured,\n            location: data.location,\n            priceIndicator: data.priceIndicator || 1,\n            attendees: data.attendees || [],\n            createdAt: data.createdAt.toDate(),\n            createdBy: data.createdBy,\n            createdByType: data.createdByType,\n          })\n        }\n      })\n\n      return events\n    } catch (error) {\n      console.error(\"Error getting featured events:\", error)\n      return []\n    }\n  }\n\n  async getEventsByVenue(venueId: string): Promise<Event[]> {\n    try {\n      const eventsRef = collection(db, \"events\")\n      const q = query(eventsRef, where(\"venueId\", \"==\", venueId))\n      const querySnapshot = await getDocs(q)\n      const events: Event[] = []\n\n      querySnapshot.forEach((doc) => {\n        const data = doc.data()\n        const eventDate = data.date.toDate()\n\n        // Only include future events\n        if (eventDate >= new Date()) {\n          events.push({\n            id: doc.id,\n            name: data.name,\n            venueId: data.venueId,\n            venueName: data.venueName,\n            description: data.description,\n            date: eventDate,\n            posterImageUrl: data.posterImageUrl,\n            artists: data.artists,\n            isFeatured: data.isFeatured,\n            location: data.location,\n            priceIndicator: data.priceIndicator || 1,\n            attendees: data.attendees || [],\n            createdAt: data.createdAt.toDate(),\n            createdBy: data.createdBy,\n            createdByType: data.createdByType,\n          })\n        }\n      })\n\n      return events\n    } catch (error) {\n      console.error(\"Error getting events by venue:\", error)\n      throw error\n    }\n  }\n\n  async getEventById(eventId: string): Promise<Event | null> {\n    try {\n      const eventRef = doc(db, \"events\", eventId)\n      const eventDoc = await getDoc(eventRef)\n\n      if (!eventDoc.exists()) {\n        return null\n      }\n\n      const data = eventDoc.data()\n      return {\n        id: eventDoc.id,\n        name: data.name,\n        venueId: data.venueId,\n        venueName: data.venueName,\n        description: data.description,\n        date: data.date.toDate(),\n        posterImageUrl: data.posterImageUrl,\n        artists: data.artists,\n        isFeatured: data.isFeatured,\n        location: data.location,\n        priceIndicator: data.priceIndicator || 1,\n        attendees: data.attendees || [],\n        createdAt: data.createdAt.toDate(),\n        createdBy: data.createdBy,\n        createdByType: data.createdByType,\n      }\n    } catch (error) {\n      console.error(\"Error getting event by ID:\", error)\n      throw error\n    }\n  }\n\n  async addEvent(eventData: Omit<Event, \"id\">): Promise<string> {\n    try {\n      // Create a Firestore-compatible object with type assertion\n      const firestoreEventData = {\n        name: eventData.name,\n        venueId: eventData.venueId,\n        venueName: eventData.venueName,\n        description: eventData.description,\n        date: Timestamp.fromDate(eventData.date) as any, // Use type assertion to avoid TypeScript error\n        posterImageUrl: eventData.posterImageUrl,\n        artists: eventData.artists,\n        isFeatured: eventData.isFeatured,\n        location: eventData.location,\n        priceIndicator: eventData.priceIndicator,\n        entryFee: eventData.entryFee,\n        attendees: eventData.attendees || [],\n        createdAt: Timestamp.fromDate(new Date()) as any, // Use type assertion to avoid TypeScript error\n        createdBy: eventData.createdBy,\n        createdByType: eventData.createdByType,\n      }\n\n      // Add the document to Firestore\n      const eventRef = await addDoc(collection(db, \"events\"), firestoreEventData)\n\n      return eventRef.id\n    } catch (error) {\n      console.error(\"Error adding event:\", error)\n      throw error\n    }\n  }\n\n  async updateEvent(eventId: string, data: Partial<Event>): Promise<void> {\n    try {\n      const eventRef = doc(db, \"events\", eventId)\n\n      // Convert Date objects to Firestore Timestamps\n      const firestoreData: any = { ...data }\n      if (data.date) {\n        firestoreData.date = Timestamp.fromDate(data.date)\n      }\n\n      await updateDoc(eventRef, firestoreData)\n      return\n    } catch (error) {\n      console.error(\"Error updating event:\", error)\n      throw error\n    }\n  }\n\n  // Enhance the deleteEvent method to also delete associated images\n  async deleteEvent(eventId: string): Promise<void> {\n    try {\n      console.log(\"FirebaseService: Deleting event\", eventId)\n\n      // Get event data to check for images\n      const eventRef = doc(db, \"events\", eventId)\n      const eventDoc = await getDoc(eventRef)\n\n      if (eventDoc.exists()) {\n        // Delete the event document\n        await deleteDoc(eventRef)\n        console.log(\"FirebaseService: Event deleted successfully\")\n      } else {\n        console.warn(\"FirebaseService: Event not found\", eventId)\n      }\n\n      return\n    } catch (error) {\n      console.error(\"Error deleting event:\", error)\n      throw error\n    }\n  }\n\n  // Delete past events\n  async deletePastEvents(): Promise<void> {\n    try {\n      console.log(\"FirebaseService: Deleting past events\")\n\n      const today = new Date()\n      today.setHours(0, 0, 0, 0)\n\n      const eventsRef = collection(db, \"events\")\n      const querySnapshot = await getDocs(eventsRef)\n      const deletePromises: Promise<void>[] = []\n\n      querySnapshot.forEach((doc) => {\n        const data = doc.data()\n        const eventDate = data.date.toDate()\n\n        // If event date is before today, delete it\n        if (eventDate < today) {\n          console.log(`FirebaseService: Deleting past event: ${data.name} (${eventDate.toDateString()})`)\n          deletePromises.push(this.deleteEvent(doc.id))\n        }\n      })\n\n      await Promise.all(deletePromises)\n      console.log(`FirebaseService: Deleted ${deletePromises.length} past events`)\n    } catch (error) {\n      console.error(\"Error deleting past events:\", error)\n      throw error\n    }\n  }\n\n  // Image upload methods - Web-friendly versions\n  async uploadVenueImage(uri: string): Promise<string> {\n    try {\n      console.log(\"FirebaseService: Uploading venue image\")\n      // For web, we'll just return the URL directly if it's already a URL\n      if (uri.startsWith(\"http\") && !uri.startsWith(\"data:\")) {\n        console.log(\"FirebaseService: Image is already a URL, returning directly\")\n        return uri\n      }\n\n      // For development or testing on web\n      if (isDevelopment()) {\n        return \"https://images.unsplash.com/photo-1566737236500-c8ac43014a67?ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80\"\n      }\n\n      // Generate a unique filename\n      const filename = `venues/${uuidv4()}`\n      const storageRef = ref(storage, filename)\n\n      // Handle data URLs (from web file picker)\n      if (uri.startsWith(\"data:\")) {\n        // Upload data URL directly\n        await uploadString(storageRef, uri, \"data_url\")\n        const downloadUrl = await getDownloadURL(storageRef)\n        return downloadUrl\n      }\n\n      // Otherwise, we need to upload the file\n      // Convert URI to blob\n      const response = await fetch(uri)\n      const blob = await response.blob()\n\n      // Upload blob to Firebase Storage\n      const uploadResult = await uploadBytes(storageRef, blob)\n\n      // Get download URL\n      const downloadUrl = await getDownloadURL(uploadResult.ref)\n      return downloadUrl\n    } catch (error) {\n      console.error(\"FirebaseService: Error uploading venue image:\", error)\n      // Return a placeholder in case of error\n      return \"https://images.unsplash.com/photo-1566737236500-c8ac43014a67?ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80\"\n    }\n  }\n\n  async uploadEventImage(uri: string): Promise<string> {\n    try {\n      console.log(\"FirebaseService: Uploading event image\", uri.substring(0, 50) + \"...\")\n\n      // For web, we'll just return the URL directly if it's already a URL and not a data URI\n      if (uri.startsWith(\"http\") && !uri.startsWith(\"data:\")) {\n        console.log(\"FirebaseService: Image is already a URL, returning directly\")\n        return uri\n      }\n\n      // Generate a unique filename\n      const filename = `events/${uuidv4()}`\n      const storageRef = ref(storage, filename)\n\n      // Handle data URLs (from web file picker)\n      if (uri.startsWith(\"data:\")) {\n        console.log(\"FirebaseService: Uploading data URL\")\n        // Upload data URL directly\n        await uploadString(storageRef, uri, \"data_url\")\n        const downloadUrl = await getDownloadURL(storageRef)\n        console.log(\"FirebaseService: Upload successful, URL:\", downloadUrl.substring(0, 50) + \"...\")\n        return downloadUrl\n      }\n\n      // Otherwise, we need to upload the file\n      console.log(\"FirebaseService: Fetching image data\")\n      // Convert URI to blob\n      const response = await fetch(uri)\n      const blob = await response.blob()\n\n      console.log(\"FirebaseService: Uploading blob to Firebase Storage\")\n      // Upload blob to Firebase Storage\n      const uploadResult = await uploadBytes(storageRef, blob)\n\n      // Get download URL\n      const downloadUrl = await getDownloadURL(uploadResult.ref)\n      console.log(\"FirebaseService: Upload successful, URL:\", downloadUrl.substring(0, 50) + \"...\")\n      return downloadUrl\n    } catch (error) {\n      console.error(\"FirebaseService: Error uploading event image:\", error)\n\n      // In development mode, return a placeholder but log the error\n      if (isDevelopment()) {\n        console.warn(\"FirebaseService: Using placeholder image due to error\")\n        return \"https://images.unsplash.com/photo-1514525253161-7a46d19cd819?ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80\"\n      }\n\n      // In production, rethrow the error\n      throw error\n    }\n  }\n\n  // Admin methods\n  async getAllUsers(): Promise<User[]> {\n    try {\n      const usersRef = collection(db, \"users\")\n      const querySnapshot = await getDocs(usersRef)\n      const users: User[] = []\n\n      querySnapshot.forEach((doc) => {\n        const data = doc.data()\n        users.push({\n          id: doc.id,\n          uid: data.uid,\n          email: data.email,\n          userType: data.userType,\n          displayName: data.displayName,\n          photoURL: data.photoURL,\n          venueId: data.venueId,\n          isFrozen: data.isFrozen,\n          createdAt: data.createdAt.toDate(),\n          lastLoginAt: data.lastLoginAt.toDate(),\n        })\n      })\n\n      return users\n    } catch (error) {\n      console.error(\"Error getting all users:\", error)\n      throw error\n    }\n  }\n\n  async getClubOwners(): Promise<User[]> {\n    try {\n      const usersRef = collection(db, \"users\")\n      const q = query(usersRef, where(\"userType\", \"==\", \"club_owner\"))\n      const querySnapshot = await getDocs(q)\n      const users: User[] = []\n\n      querySnapshot.forEach((doc) => {\n        const data = doc.data()\n        users.push({\n          id: doc.id,\n          uid: data.uid,\n          email: data.email,\n          userType: data.userType,\n          displayName: data.displayName,\n          photoURL: data.photoURL,\n          venueId: data.venueId,\n          isFrozen: data.isFrozen,\n          createdAt: data.createdAt.toDate(),\n          lastLoginAt: data.lastLoginAt.toDate(),\n        })\n      })\n\n      return users\n    } catch (error) {\n      console.error(\"Error getting club owners:\", error)\n      throw error\n    }\n  }\n\n  async freezeUser(userId: string, isFrozen: boolean): Promise<void> {\n    try {\n      const userRef = doc(db, \"users\", userId)\n      await updateDoc(userRef, { isFrozen })\n      return\n    } catch (error) {\n      console.error(\"Error freezing/unfreezing user:\", error)\n      throw error\n    }\n  }\n\n  // Enhance the deleteUser method to also delete user's content\n  async deleteUser(userId: string): Promise<void> {\n    try {\n      console.log(\"FirebaseService: Deleting user\", userId)\n\n      // Get user data to check if they're a venue owner\n      const userRef = doc(db, \"users\", userId)\n      const userDoc = await getDoc(userRef)\n\n      if (userDoc.exists()) {\n        const userData = userDoc.data()\n\n        // If user is a club owner, delete their venues\n        if (userData.userType === \"club_owner\") {\n          // Get all venues owned by this user\n          const venuesRef = collection(db, \"venues\")\n          const q = query(venuesRef, where(\"ownerId\", \"==\", userId))\n          const venueSnapshot = await getDocs(q)\n\n          // Delete each venue and its events\n          const venueDeletePromises: Promise<void>[] = []\n          venueSnapshot.forEach((venueDoc) => {\n            // Delete events for this venue\n            venueDeletePromises.push(this.deleteEventsByVenue(venueDoc.id))\n            // Delete the venue itself\n            venueDeletePromises.push(deleteDoc(venueDoc.ref))\n          })\n\n          await Promise.all(venueDeletePromises)\n          console.log(`FirebaseService: Deleted ${venueSnapshot.size} venues for user ${userId}`)\n        }\n\n        // Delete user's events (if they created any as a regular user)\n        const eventsRef = collection(db, \"events\")\n        const eventsQuery = query(eventsRef, where(\"createdBy\", \"==\", userId))\n        const eventsSnapshot = await getDocs(eventsQuery)\n\n        const eventDeletePromises: Promise<void>[] = []\n        eventsSnapshot.forEach((eventDoc) => {\n          eventDeletePromises.push(deleteDoc(eventDoc.ref))\n        })\n\n        await Promise.all(eventDeletePromises)\n        console.log(`FirebaseService: Deleted ${eventsSnapshot.size} events created by user ${userId}`)\n      }\n\n      // Finally delete the user document\n      await deleteDoc(userRef)\n      console.log(\"FirebaseService: User deleted successfully\")\n      return\n    } catch (error) {\n      console.error(\"Error deleting user:\", error)\n      throw error\n    }\n  }\n}\n\nexport default new FirebaseService()\n"],"mappings":"AAAA,MAAO,gCAAgC,CACvC,OACEA,UAAU,CACVC,MAAM,CACNC,MAAM,CACNC,OAAO,CACPC,GAAG,CACHC,KAAK,CACLC,KAAK,CACLC,SAAS,CACTC,SAAS,CACTC,SAAS,KACJ,oBAAoB,CAC3B,OAASC,8BAA8B,CAAEC,0BAA0B,CAAEC,OAAO,GAAI,CAAAC,eAAe,KAAQ,eAAe,CACtH,OAASC,GAAG,CAAEC,WAAW,CAAEC,cAAc,CAAEC,YAAY,KAAQ,kBAAkB,CACjF,OAASC,IAAI,CAAEC,EAAE,CAAEC,OAAO,0BAI1B,OAASC,EAAE,GAAI,CAAAC,MAAM,KAAQ,MAAM,CACnC,OAASC,aAAa,oBAEtB,KAAM,CAAAC,eAAgB,CAEpB,KAAM,CAAAC,MAAMA,CAACC,KAAa,CAAEC,QAAgB,CAAEC,QAAkB,CAAiB,CAC/E,GAAI,CACFC,OAAO,CAACC,GAAG,CAAC,kCAAkC,CAAEJ,KAAK,CAAE,IAAI,CAAEE,QAAQ,CAAC,CACtE,KAAM,CAAAG,cAAc,CAAG,KAAM,CAAArB,8BAA8B,CAACQ,IAAI,CAAEQ,KAAK,CAAEC,QAAQ,CAAC,CAClF,KAAM,CAAEK,GAAI,CAAC,CAAGD,cAAc,CAACE,IAAI,CACnCJ,OAAO,CAACC,GAAG,CAAC,wCAAwC,CAAEE,GAAG,CAAC,CAG1D,KAAM,CAAAE,OAAO,CAAG,KAAM,CAAAjC,MAAM,CAACD,UAAU,CAACmB,EAAE,CAAE,OAAO,CAAC,CAAE,CACpDa,GAAG,CACHN,KAAK,CACLE,QAAQ,CACRO,SAAS,CAAE1B,SAAS,CAAC2B,GAAG,CAAC,CAAC,CAC1BC,WAAW,CAAE5B,SAAS,CAAC2B,GAAG,CAAC,CAC7B,CAAC,CAAC,CACFP,OAAO,CAACC,GAAG,CAAC,+CAA+C,CAAEI,OAAO,CAACI,EAAE,CAAC,CAExE,OACF,CAAE,MAAOC,KAAK,CAAE,CACdV,OAAO,CAACU,KAAK,CAAC,oCAAoC,CAAEA,KAAK,CAAC,CAC1D,KAAM,CAAAA,KAAK,CACb,CACF,CAEA,KAAM,CAAAC,MAAMA,CAACd,KAAa,CAAEC,QAAgB,CAAiB,CAC3D,GAAI,CACFE,OAAO,CAACC,GAAG,CAAC,kCAAkC,CAAEJ,KAAK,CAAC,CACtD,KAAM,CAAAf,0BAA0B,CAACO,IAAI,CAAEQ,KAAK,CAAEC,QAAQ,CAAC,CACvDE,OAAO,CAACC,GAAG,CAAC,qCAAqC,CAAC,CAClD,OACF,CAAE,MAAOS,KAAK,CAAE,CACdV,OAAO,CAACU,KAAK,CAAC,oCAAoC,CAAEA,KAAK,CAAC,CAC1D,KAAM,CAAAA,KAAK,CACb,CACF,CAEA,KAAM,CAAA3B,OAAOA,CAAA,CAAkB,CAC7B,GAAI,CACFiB,OAAO,CAACC,GAAG,CAAC,mCAAmC,CAAC,CAChD,KAAM,CAAAjB,eAAe,CAACK,IAAI,CAAC,CAC3BW,OAAO,CAACC,GAAG,CAAC,sCAAsC,CAAC,CACnD,OACF,CAAE,MAAOS,KAAK,CAAE,CACdV,OAAO,CAACU,KAAK,CAAC,qCAAqC,CAAEA,KAAK,CAAC,CAC3D,KAAM,CAAAA,KAAK,CACb,CACF,CAGA,KAAM,CAAAE,cAAcA,CAACT,GAAW,CAAiB,CAC/C,GAAI,CACFH,OAAO,CAACC,GAAG,CAAC,+CAA+C,CAAEE,GAAG,CAAC,CACjE,KAAM,CAAAU,QAAQ,CAAG1C,UAAU,CAACmB,EAAE,CAAE,OAAO,CAAC,CACxC,KAAM,CAAAwB,CAAC,CAAGtC,KAAK,CAACqC,QAAQ,CAAEpC,KAAK,CAAC,KAAK,CAAE,IAAI,CAAE0B,GAAG,CAAC,CAAC,CAClD,KAAM,CAAAY,aAAa,CAAG,KAAM,CAAAzC,OAAO,CAACwC,CAAC,CAAC,CAEtC,GAAIC,aAAa,CAACC,KAAK,CAAE,CACvBhB,OAAO,CAACU,KAAK,CAAC,yCAAyC,CAAEP,GAAG,CAAC,CAC7D,KAAM,IAAI,CAAAc,KAAK,CAAC,gBAAgB,CAAC,CACnC,CAEA,KAAM,CAAAC,OAAO,CAAGH,aAAa,CAACI,IAAI,CAAC,CAAC,CAAC,CACrC,KAAM,CAAAC,QAAQ,CAAGF,OAAO,CAACG,IAAI,CAAC,CAAC,CAC/BrB,OAAO,CAACC,GAAG,CAAC,qCAAqC,CAAEiB,OAAO,CAACT,EAAE,CAAC,CAE9D,MAAO,CACLA,EAAE,CAAES,OAAO,CAACT,EAAE,CACdN,GAAG,CAAEiB,QAAQ,CAACjB,GAAG,CACjBN,KAAK,CAAEuB,QAAQ,CAACvB,KAAK,CACrBE,QAAQ,CAAEqB,QAAQ,CAACrB,QAAQ,CAC3BuB,WAAW,CAAEF,QAAQ,CAACE,WAAW,CACjCC,QAAQ,CAAEH,QAAQ,CAACG,QAAQ,CAC3BC,OAAO,CAAEJ,QAAQ,CAACI,OAAO,CACzBC,QAAQ,CAAEL,QAAQ,CAACK,QAAQ,CAC3BnB,SAAS,CAAEc,QAAQ,CAACd,SAAS,CAACoB,MAAM,CAAC,CAAC,CACtClB,WAAW,CAAEY,QAAQ,CAACZ,WAAW,CAACkB,MAAM,CAAC,CAC3C,CAAC,CACH,CAAE,MAAOhB,KAAK,CAAE,CACdV,OAAO,CAACU,KAAK,CAAC,8CAA8C,CAAEA,KAAK,CAAC,CACpE,KAAM,CAAAA,KAAK,CACb,CACF,CAEA,KAAM,CAAAiB,cAAcA,CAAA,CAAyB,CAC3C,GAAI,CACF,KAAM,CAAAC,WAAW,CAAGvC,IAAI,CAACuC,WAAW,CACpC,GAAI,CAACA,WAAW,CAAE,CAChB5B,OAAO,CAACC,GAAG,CAAC,kCAAkC,CAAC,CAC/C,MAAO,KAAI,CACb,CAEAD,OAAO,CAACC,GAAG,CAAC,mDAAmD,CAAE2B,WAAW,CAAC/B,KAAK,CAAC,CACnF,MAAO,MAAM,KAAI,CAACe,cAAc,CAACgB,WAAW,CAACzB,GAAG,CAAC,CACnD,CAAE,MAAOO,KAAK,CAAE,CACdV,OAAO,CAACU,KAAK,CAAC,8CAA8C,CAAEA,KAAK,CAAC,CACpE,KAAM,CAAAA,KAAK,CACb,CACF,CAEA,KAAM,CAAAmB,iBAAiBA,CAACC,MAAc,CAAET,IAAmB,CAAiB,CAC1E,GAAI,CACFrB,OAAO,CAACC,GAAG,CAAC,wCAAwC,CAAE6B,MAAM,CAAC,CAC7D,KAAM,CAAAzB,OAAO,CAAG9B,GAAG,CAACe,EAAE,CAAE,OAAO,CAAEwC,MAAM,CAAC,CACxC,KAAM,CAAApD,SAAS,CAAC2B,OAAO,CAAA0B,MAAA,CAAAC,MAAA,IAClBX,IAAI,EACPb,WAAW,CAAE5B,SAAS,CAAC2B,GAAG,CAAC,CAAC,EAC7B,CAAC,CACFP,OAAO,CAACC,GAAG,CAAC,uCAAuC,CAAC,CACpD,OACF,CAAE,MAAOS,KAAK,CAAE,CACdV,OAAO,CAACU,KAAK,CAAC,+CAA+C,CAAEA,KAAK,CAAC,CACrE,KAAM,CAAAA,KAAK,CACb,CACF,CAGA,KAAM,CAAAuB,SAASA,CAAA,CAAqB,CAClC,GAAI,CACFjC,OAAO,CAACC,GAAG,CAAC,iCAAiC,CAAC,CAG9C,GAAIP,aAAa,CAAC,CAAC,CAAE,CACnB,GAAI,CACF,KAAM,CAAAwC,SAAS,CAAG/D,UAAU,CAACmB,EAAE,CAAE,QAAQ,CAAC,CAC1C,KAAM,CAAAyB,aAAa,CAAG,KAAM,CAAAzC,OAAO,CAAC4D,SAAS,CAAC,CAE9C,GAAInB,aAAa,CAACC,KAAK,CAAE,CACvBhB,OAAO,CAACC,GAAG,CAAC,uDAAuD,CAAC,CACpE,MAAO,KAAI,CAACkC,aAAa,CAAC,CAAC,CAC7B,CAEA,KAAM,CAAAC,MAAe,CAAG,EAAE,CAC1BrB,aAAa,CAACsB,OAAO,CAAE9D,GAAG,EAAK,CAC7B,KAAM,CAAA8C,IAAI,CAAG9C,GAAG,CAAC8C,IAAI,CAAC,CAAC,CACvBe,MAAM,CAACE,IAAI,CAAC,CACV7B,EAAE,CAAElC,GAAG,CAACkC,EAAE,CACV8B,IAAI,CAAElB,IAAI,CAACkB,IAAI,CACfC,QAAQ,CAAEnB,IAAI,CAACmB,QAAQ,CACvBC,WAAW,CAAEpB,IAAI,CAACoB,WAAW,CAC7BC,kBAAkB,CAAErB,IAAI,CAACqB,kBAAkB,CAC3CC,UAAU,CAAEtB,IAAI,CAACsB,UAAU,CAC3BC,UAAU,CAAEvB,IAAI,CAACuB,UAAU,CAC3BC,WAAW,CAAExB,IAAI,CAACwB,WAAW,EAAI,EAAE,CACnCC,QAAQ,CAAEzB,IAAI,CAACyB,QAAQ,CACvBC,SAAS,CAAE1B,IAAI,CAAC0B,SAAS,CACzBC,cAAc,CAAE3B,IAAI,CAAC2B,cAAc,EAAI,CAAC,CAAC,CACzCC,OAAO,CAAE5B,IAAI,CAAC4B,OAAO,CACrB3C,SAAS,CAAEe,IAAI,CAACf,SAAS,CAACoB,MAAM,CAAC,CACnC,CAAC,CAAC,CACJ,CAAC,CAAC,CAEF1B,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAEmC,MAAM,CAACc,MAAM,CAAE,QAAQ,CAAC,CAC9D,MAAO,CAAAd,MAAM,CACf,CAAE,MAAO1B,KAAK,CAAE,CACdV,OAAO,CAACmD,IAAI,CAAC,6DAA6D,CAAEzC,KAAK,CAAC,CAClF,MAAO,KAAI,CAACyB,aAAa,CAAC,CAAC,CAC7B,CACF,CAGA,KAAM,CAAAD,SAAS,CAAG/D,UAAU,CAACmB,EAAE,CAAE,QAAQ,CAAC,CAC1C,KAAM,CAAAyB,aAAa,CAAG,KAAM,CAAAzC,OAAO,CAAC4D,SAAS,CAAC,CAC9C,KAAM,CAAAE,MAAe,CAAG,EAAE,CAE1BrB,aAAa,CAACsB,OAAO,CAAE9D,GAAG,EAAK,CAC7B,KAAM,CAAA8C,IAAI,CAAG9C,GAAG,CAAC8C,IAAI,CAAC,CAAC,CACvBe,MAAM,CAACE,IAAI,CAAC,CACV7B,EAAE,CAAElC,GAAG,CAACkC,EAAE,CACV8B,IAAI,CAAElB,IAAI,CAACkB,IAAI,CACfC,QAAQ,CAAEnB,IAAI,CAACmB,QAAQ,CACvBC,WAAW,CAAEpB,IAAI,CAACoB,WAAW,CAC7BC,kBAAkB,CAAErB,IAAI,CAACqB,kBAAkB,CAC3CC,UAAU,CAAEtB,IAAI,CAACsB,UAAU,CAC3BC,UAAU,CAAEvB,IAAI,CAACuB,UAAU,CAC3BC,WAAW,CAAExB,IAAI,CAACwB,WAAW,EAAI,EAAE,CACnCC,QAAQ,CAAEzB,IAAI,CAACyB,QAAQ,CACvBC,SAAS,CAAE1B,IAAI,CAAC0B,SAAS,CACzBC,cAAc,CAAE3B,IAAI,CAAC2B,cAAc,EAAI,CAAC,CAAC,CACzCC,OAAO,CAAE5B,IAAI,CAAC4B,OAAO,CACrB3C,SAAS,CAAEe,IAAI,CAACf,SAAS,CAACoB,MAAM,CAAC,CACnC,CAAC,CAAC,CACJ,CAAC,CAAC,CAEF1B,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAEmC,MAAM,CAACc,MAAM,CAAE,QAAQ,CAAC,CAC9D,MAAO,CAAAd,MAAM,CACf,CAAE,MAAO1B,KAAK,CAAE,CACdV,OAAO,CAACU,KAAK,CAAC,wCAAwC,CAAEA,KAAK,CAAC,CAC9D,KAAM,CAAAA,KAAK,CACb,CACF,CAGQyB,aAAaA,CAAA,CAAY,CAC/B,MAAO,CACL,CACE1B,EAAE,CAAE,QAAQ,CACZ8B,IAAI,CAAE,WAAW,CACjBC,QAAQ,CAAE,uBAAuB,CACjCC,WAAW,CAAE,kEAAkE,CAC/EC,kBAAkB,CAChB,8GAA8G,CAChHC,UAAU,CAAE,CAAC,WAAW,CAAE,OAAO,CAAE,KAAK,CAAC,CACzCC,UAAU,CAAE,GAAG,CACfE,QAAQ,CAAE,OAAO,CACjBC,SAAS,CAAE,CAAC,MAAM,CAClBC,cAAc,CAAE,CACdI,MAAM,CAAE,QAAQ,CAChBC,OAAO,CAAE,4BAA4B,CACrCC,SAAS,CAAE,sCAAsC,CACjDC,QAAQ,CAAE,uCAAuC,CACjDC,MAAM,CAAE,kCAAkC,CAC1CC,QAAQ,CAAE,2BAA2B,CACrCC,MAAM,CAAE,uBACV,CAAC,CACDT,OAAO,CAAE,QAAQ,CACjB3C,SAAS,CAAE,GAAI,CAAAqD,IAAI,CAAC,CACtB,CAAC,CACD,CACElD,EAAE,CAAE,QAAQ,CACZ8B,IAAI,CAAE,gBAAgB,CACtBC,QAAQ,CAAE,sBAAsB,CAChCC,WAAW,CAAE,8EAA8E,CAC3FC,kBAAkB,CAChB,8GAA8G,CAChHC,UAAU,CAAE,CAAC,MAAM,CAAE,KAAK,CAAE,YAAY,CAAC,CACzCC,UAAU,CAAE,GAAG,CACfE,QAAQ,CAAE,OAAO,CACjBC,SAAS,CAAE,CAAC,OAAO,CACnBC,cAAc,CAAE,CACdI,MAAM,CAAE,QAAQ,CAChBC,OAAO,CAAE,oBAAoB,CAC7BC,SAAS,CAAE,uBAAuB,CAClCC,QAAQ,CAAE,sBAAsB,CAChCC,MAAM,CAAE,6BAA6B,CACrCC,QAAQ,CAAE,yBAAyB,CACnCC,MAAM,CAAE,qBACV,CAAC,CACDT,OAAO,CAAE,QAAQ,CACjB3C,SAAS,CAAE,GAAI,CAAAqD,IAAI,CAAC,CACtB,CAAC,CACD,CACElD,EAAE,CAAE,QAAQ,CACZ8B,IAAI,CAAE,gBAAgB,CACtBC,QAAQ,CAAE,wBAAwB,CAClCC,WAAW,CAAE,oEAAoE,CACjFC,kBAAkB,CAChB,8GAA8G,CAChHC,UAAU,CAAE,CAAC,QAAQ,CAAE,SAAS,CAAE,WAAW,CAAC,CAC9CC,UAAU,CAAE,GAAG,CACfE,QAAQ,CAAE,MAAM,CAChBC,SAAS,CAAE,CAAC,OAAO,CACnBC,cAAc,CAAE,CACdI,MAAM,CAAE,wBAAwB,CAChCC,OAAO,CAAE,wBAAwB,CACjCC,SAAS,CAAE,qBAAqB,CAChCC,QAAQ,CAAE,oBAAoB,CAC9BC,MAAM,CAAE,8BAA8B,CACtCC,QAAQ,CAAE,0BAA0B,CACpCC,MAAM,CAAE,uBACV,CAAC,CACDT,OAAO,CAAE,QAAQ,CACjB3C,SAAS,CAAE,GAAI,CAAAqD,IAAI,CAAC,CACtB,CAAC,CACF,CACH,CAEA,KAAM,CAAAC,gBAAgBA,CAACX,OAAe,CAAoB,CACxD,GAAI,CACF,KAAM,CAAAf,SAAS,CAAG/D,UAAU,CAACmB,EAAE,CAAE,QAAQ,CAAC,CAC1C,KAAM,CAAAwB,CAAC,CAAGtC,KAAK,CAAC0D,SAAS,CAAEzD,KAAK,CAAC,SAAS,CAAE,IAAI,CAAEwE,OAAO,CAAC,CAAC,CAC3D,KAAM,CAAAlC,aAAa,CAAG,KAAM,CAAAzC,OAAO,CAACwC,CAAC,CAAC,CACtC,KAAM,CAAAsB,MAAe,CAAG,EAAE,CAE1BrB,aAAa,CAACsB,OAAO,CAAE9D,GAAG,EAAK,CAC7B,KAAM,CAAA8C,IAAI,CAAG9C,GAAG,CAAC8C,IAAI,CAAC,CAAC,CACvBe,MAAM,CAACE,IAAI,CAAC,CACV7B,EAAE,CAAElC,GAAG,CAACkC,EAAE,CACV8B,IAAI,CAAElB,IAAI,CAACkB,IAAI,CACfC,QAAQ,CAAEnB,IAAI,CAACmB,QAAQ,CACvBC,WAAW,CAAEpB,IAAI,CAACoB,WAAW,CAC7BC,kBAAkB,CAAErB,IAAI,CAACqB,kBAAkB,CAC3CC,UAAU,CAAEtB,IAAI,CAACsB,UAAU,CAC3BC,UAAU,CAAEvB,IAAI,CAACuB,UAAU,CAC3BC,WAAW,CAAExB,IAAI,CAACwB,WAAW,EAAI,EAAE,CACnCC,QAAQ,CAAEzB,IAAI,CAACyB,QAAQ,CACvBC,SAAS,CAAE1B,IAAI,CAAC0B,SAAS,CACzBC,cAAc,CAAE3B,IAAI,CAAC2B,cAAc,EAAI,CAAC,CAAC,CACzCC,OAAO,CAAE5B,IAAI,CAAC4B,OAAO,CACrB3C,SAAS,CAAEe,IAAI,CAACf,SAAS,CAACoB,MAAM,CAAC,CACnC,CAAC,CAAC,CACJ,CAAC,CAAC,CAEF,MAAO,CAAAU,MAAM,CACf,CAAE,MAAO1B,KAAK,CAAE,CACdV,OAAO,CAACU,KAAK,CAAC,gCAAgC,CAAEA,KAAK,CAAC,CACtD,KAAM,CAAAA,KAAK,CACb,CACF,CAEA,KAAM,CAAAmD,YAAYA,CAACrC,OAAe,CAAyB,CACzD,GAAI,CACF,KAAM,CAAAsC,QAAQ,CAAGvF,GAAG,CAACe,EAAE,CAAE,QAAQ,CAAEkC,OAAO,CAAC,CAC3C,KAAM,CAAAuC,QAAQ,CAAG,KAAM,CAAA1F,MAAM,CAACyF,QAAQ,CAAC,CAEvC,GAAI,CAACC,QAAQ,CAACC,MAAM,CAAC,CAAC,CAAE,CACtB,MAAO,KAAI,CACb,CAEA,KAAM,CAAA3C,IAAI,CAAG0C,QAAQ,CAAC1C,IAAI,CAAC,CAAC,CAC5B,MAAO,CACLZ,EAAE,CAAEsD,QAAQ,CAACtD,EAAE,CACf8B,IAAI,CAAElB,IAAI,CAACkB,IAAI,CACfC,QAAQ,CAAEnB,IAAI,CAACmB,QAAQ,CACvBC,WAAW,CAAEpB,IAAI,CAACoB,WAAW,CAC7BC,kBAAkB,CAAErB,IAAI,CAACqB,kBAAkB,CAC3CC,UAAU,CAAEtB,IAAI,CAACsB,UAAU,CAC3BC,UAAU,CAAEvB,IAAI,CAACuB,UAAU,CAC3BC,WAAW,CAAExB,IAAI,CAACwB,WAAW,EAAI,EAAE,CACnCC,QAAQ,CAAEzB,IAAI,CAACyB,QAAQ,CACvBC,SAAS,CAAE1B,IAAI,CAAC0B,SAAS,CACzBC,cAAc,CAAE3B,IAAI,CAAC2B,cAAc,EAAI,CAAC,CAAC,CACzCC,OAAO,CAAE5B,IAAI,CAAC4B,OAAO,CACrB3C,SAAS,CAAEe,IAAI,CAACf,SAAS,CAACoB,MAAM,CAAC,CACnC,CAAC,CACH,CAAE,MAAOhB,KAAK,CAAE,CACdV,OAAO,CAACU,KAAK,CAAC,4BAA4B,CAAEA,KAAK,CAAC,CAClD,KAAM,CAAAA,KAAK,CACb,CACF,CAEA,KAAM,CAAAuD,QAAQA,CAACC,SAA4B,CAAmB,CAC5D,GAAI,CACF,KAAM,CAAAJ,QAAQ,CAAG,KAAM,CAAA1F,MAAM,CAACD,UAAU,CAACmB,EAAE,CAAE,QAAQ,CAAC,CAAAyC,MAAA,CAAAC,MAAA,IACjDkC,SAAS,EACZ5D,SAAS,CAAE1B,SAAS,CAACuF,QAAQ,CAACD,SAAS,CAAC5D,SAAS,CAAC,EACnD,CAAC,CAEF,MAAO,CAAAwD,QAAQ,CAACrD,EAAE,CACpB,CAAE,MAAOC,KAAK,CAAE,CACdV,OAAO,CAACU,KAAK,CAAC,qBAAqB,CAAEA,KAAK,CAAC,CAC3C,KAAM,CAAAA,KAAK,CACb,CACF,CAEA,KAAM,CAAA0D,WAAWA,CAAC5C,OAAe,CAAEH,IAAoB,CAAiB,CACtE,GAAI,CACF,KAAM,CAAAyC,QAAQ,CAAGvF,GAAG,CAACe,EAAE,CAAE,QAAQ,CAAEkC,OAAO,CAAC,CAC3C,KAAM,CAAA9C,SAAS,CAACoF,QAAQ,CAAEzC,IAAI,CAAC,CAC/B,OACF,CAAE,MAAOX,KAAK,CAAE,CACdV,OAAO,CAACU,KAAK,CAAC,uBAAuB,CAAEA,KAAK,CAAC,CAC7C,KAAM,CAAAA,KAAK,CACb,CACF,CAEA,KAAM,CAAA2D,mBAAmBA,CAAC7C,OAAe,CAAE8C,QAAgC,CAAiB,CAC1F,GAAI,CACF,KAAM,CAAAR,QAAQ,CAAGvF,GAAG,CAACe,EAAE,CAAE,QAAQ,CAAEkC,OAAO,CAAC,CAC3C,KAAM,CAAA9C,SAAS,CAACoF,QAAQ,CAAE,CAAEd,cAAc,CAAEsB,QAAS,CAAC,CAAC,CACvD,OACF,CAAE,MAAO5D,KAAK,CAAE,CACdV,OAAO,CAACU,KAAK,CAAC,gCAAgC,CAAEA,KAAK,CAAC,CACtD,KAAM,CAAAA,KAAK,CACb,CACF,CAGA,KAAM,CAAA6D,mBAAmBA,CAAC/C,OAAe,CAAiB,CACxD,GAAI,CACFxB,OAAO,CAACC,GAAG,CAAC,4CAA4C,CAAEuB,OAAO,CAAC,CAGlE,KAAM,CAAAgD,SAAS,CAAGrG,UAAU,CAACmB,EAAE,CAAE,QAAQ,CAAC,CAC1C,KAAM,CAAAwB,CAAC,CAAGtC,KAAK,CAACgG,SAAS,CAAE/F,KAAK,CAAC,SAAS,CAAE,IAAI,CAAE+C,OAAO,CAAC,CAAC,CAC3D,KAAM,CAAAT,aAAa,CAAG,KAAM,CAAAzC,OAAO,CAACwC,CAAC,CAAC,CAGtC,KAAM,CAAA2D,cAA+B,CAAG,EAAE,CAC1C1D,aAAa,CAACsB,OAAO,CAAE9D,GAAG,EAAK,CAC7BkG,cAAc,CAACnC,IAAI,CAAC3D,SAAS,CAACJ,GAAG,CAACU,GAAG,CAAC,CAAC,CACzC,CAAC,CAAC,CAEF,KAAM,CAAAyF,OAAO,CAACC,GAAG,CAACF,cAAc,CAAC,CACjCzE,OAAO,CAACC,GAAG,CAAC,4BAA4BwE,cAAc,CAACvB,MAAM,qBAAqB1B,OAAO,EAAE,CAAC,CAC5F,OACF,CAAE,MAAOd,KAAK,CAAE,CACdV,OAAO,CAACU,KAAK,CAAC,iCAAiC,CAAEA,KAAK,CAAC,CACvD,KAAM,CAAAA,KAAK,CACb,CACF,CAGA,KAAM,CAAAkE,WAAWA,CAACpD,OAAe,CAAiB,CAChD,GAAI,CACFxB,OAAO,CAACC,GAAG,CAAC,iCAAiC,CAAEuB,OAAO,CAAC,CAGvD,KAAM,CAAAsC,QAAQ,CAAGvF,GAAG,CAACe,EAAE,CAAE,QAAQ,CAAEkC,OAAO,CAAC,CAC3C,KAAM,CAAAuC,QAAQ,CAAG,KAAM,CAAA1F,MAAM,CAACyF,QAAQ,CAAC,CAEvC,GAAIC,QAAQ,CAACC,MAAM,CAAC,CAAC,CAAE,CAErB,KAAM,CAAArF,SAAS,CAACmF,QAAQ,CAAC,CACzB9D,OAAO,CAACC,GAAG,CAAC,6CAA6C,CAAC,CAC5D,CAAC,IAAM,CACLD,OAAO,CAACmD,IAAI,CAAC,kCAAkC,CAAE3B,OAAO,CAAC,CAC3D,CAEA,OACF,CAAE,MAAOd,KAAK,CAAE,CACdV,OAAO,CAACU,KAAK,CAAC,uBAAuB,CAAEA,KAAK,CAAC,CAC7C,KAAM,CAAAA,KAAK,CACb,CACF,CAGA,KAAM,CAAAmE,SAASA,CAAA,CAAqB,CAClC,GAAI,CACF7E,OAAO,CAACC,GAAG,CAAC,iCAAiC,CAAC,CAG9C,GAAI,CACF,KAAM,CAAAuE,SAAS,CAAGrG,UAAU,CAACmB,EAAE,CAAE,QAAQ,CAAC,CAC1C,KAAM,CAAAyB,aAAa,CAAG,KAAM,CAAAzC,OAAO,CAACkG,SAAS,CAAC,CAC9C,KAAM,CAAAM,MAAe,CAAG,EAAE,CAE1B/D,aAAa,CAACsB,OAAO,CAAE9D,GAAG,EAAK,CAC7B,KAAM,CAAA8C,IAAI,CAAG9C,GAAG,CAAC8C,IAAI,CAAC,CAAC,CACvB,KAAM,CAAA0D,SAAS,CAAG1D,IAAI,CAAC2D,IAAI,CAACtD,MAAM,CAAC,CAAC,CAGpC,GAAIqD,SAAS,EAAI,GAAI,CAAApB,IAAI,CAAC,CAAC,CAAE,CAC3BmB,MAAM,CAACxC,IAAI,CAAC,CACV7B,EAAE,CAAElC,GAAG,CAACkC,EAAE,CACV8B,IAAI,CAAElB,IAAI,CAACkB,IAAI,CACff,OAAO,CAAEH,IAAI,CAACG,OAAO,CACrByD,SAAS,CAAE5D,IAAI,CAAC4D,SAAS,CACzBxC,WAAW,CAAEpB,IAAI,CAACoB,WAAW,CAC7BuC,IAAI,CAAED,SAAS,CACfG,cAAc,CAAE7D,IAAI,CAAC6D,cAAc,CACnCC,OAAO,CAAE9D,IAAI,CAAC8D,OAAO,CACrBC,UAAU,CAAE/D,IAAI,CAAC+D,UAAU,CAC3B5C,QAAQ,CAAEnB,IAAI,CAACmB,QAAQ,CACvB6C,cAAc,CAAEhE,IAAI,CAACgE,cAAc,EAAI,CAAC,CACxCC,SAAS,CAAEjE,IAAI,CAACiE,SAAS,EAAI,EAAE,CAC/BhF,SAAS,CAAEe,IAAI,CAACf,SAAS,CAACoB,MAAM,CAAC,CAAC,CAClC6D,SAAS,CAAElE,IAAI,CAACkE,SAAS,CACzBC,aAAa,CAAEnE,IAAI,CAACmE,aACtB,CAAC,CAAC,CACJ,CACF,CAAC,CAAC,CAEFxF,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAE6E,MAAM,CAAC5B,MAAM,CAAE,QAAQ,CAAC,CAG9D,KAAM,CAAAuC,YAAY,CAAGX,MAAM,CAACY,IAAI,CAAC,CAACC,CAAC,CAAEC,CAAC,GAAK,CACzC,MAAO,CAAAD,CAAC,CAACX,IAAI,CAACa,OAAO,CAAC,CAAC,CAAGD,CAAC,CAACZ,IAAI,CAACa,OAAO,CAAC,CAAC,CAC5C,CAAC,CAAC,CAEF,MAAO,CAAAJ,YAAY,CACrB,CAAE,MAAO/E,KAAK,CAAE,CACdV,OAAO,CAACU,KAAK,CAAC,sCAAsC,CAAEA,KAAK,CAAC,CAG5D,GAAIhB,aAAa,CAAC,CAAC,CAAE,CACnBM,OAAO,CAACmD,IAAI,CAAC,gDAAgD,CAAC,CAC9D,MAAO,EAAE,CACX,CAAC,IAAM,CACL,KAAM,CAAAzC,KAAK,CACb,CACF,CACF,CAAE,MAAOA,KAAK,CAAE,CACdV,OAAO,CAACU,KAAK,CAAC,uBAAuB,CAAEA,KAAK,CAAC,CAC7C,KAAM,CAAAA,KAAK,CACb,CACF,CAEA,KAAM,CAAAoF,iBAAiBA,CAAA,CAAqB,CAC1C,GAAI,CACF,KAAM,CAAAtB,SAAS,CAAGrG,UAAU,CAACmB,EAAE,CAAE,QAAQ,CAAC,CAC1C,KAAM,CAAAwB,CAAC,CAAGtC,KAAK,CAACgG,SAAS,CAAE/F,KAAK,CAAC,YAAY,CAAE,IAAI,CAAE,IAAI,CAAC,CAAC,CAC3D,KAAM,CAAAsC,aAAa,CAAG,KAAM,CAAAzC,OAAO,CAACwC,CAAC,CAAC,CACtC,KAAM,CAAAgE,MAAe,CAAG,EAAE,CAE1B/D,aAAa,CAACsB,OAAO,CAAE9D,GAAG,EAAK,CAC7B,KAAM,CAAA8C,IAAI,CAAG9C,GAAG,CAAC8C,IAAI,CAAC,CAAC,CACvB,KAAM,CAAA0D,SAAS,CAAG1D,IAAI,CAAC2D,IAAI,CAACtD,MAAM,CAAC,CAAC,CAGpC,GAAIqD,SAAS,EAAI,GAAI,CAAApB,IAAI,CAAC,CAAC,CAAE,CAC3BmB,MAAM,CAACxC,IAAI,CAAC,CACV7B,EAAE,CAAElC,GAAG,CAACkC,EAAE,CACV8B,IAAI,CAAElB,IAAI,CAACkB,IAAI,CACff,OAAO,CAAEH,IAAI,CAACG,OAAO,CACrByD,SAAS,CAAE5D,IAAI,CAAC4D,SAAS,CACzBxC,WAAW,CAAEpB,IAAI,CAACoB,WAAW,CAC7BuC,IAAI,CAAED,SAAS,CACfG,cAAc,CAAE7D,IAAI,CAAC6D,cAAc,CACnCC,OAAO,CAAE9D,IAAI,CAAC8D,OAAO,CACrBC,UAAU,CAAE/D,IAAI,CAAC+D,UAAU,CAC3B5C,QAAQ,CAAEnB,IAAI,CAACmB,QAAQ,CACvB6C,cAAc,CAAEhE,IAAI,CAACgE,cAAc,EAAI,CAAC,CACxCC,SAAS,CAAEjE,IAAI,CAACiE,SAAS,EAAI,EAAE,CAC/BhF,SAAS,CAAEe,IAAI,CAACf,SAAS,CAACoB,MAAM,CAAC,CAAC,CAClC6D,SAAS,CAAElE,IAAI,CAACkE,SAAS,CACzBC,aAAa,CAAEnE,IAAI,CAACmE,aACtB,CAAC,CAAC,CACJ,CACF,CAAC,CAAC,CAEF,MAAO,CAAAV,MAAM,CACf,CAAE,MAAOpE,KAAK,CAAE,CACdV,OAAO,CAACU,KAAK,CAAC,gCAAgC,CAAEA,KAAK,CAAC,CACtD,MAAO,EAAE,CACX,CACF,CAEA,KAAM,CAAAqF,gBAAgBA,CAACvE,OAAe,CAAoB,CACxD,GAAI,CACF,KAAM,CAAAgD,SAAS,CAAGrG,UAAU,CAACmB,EAAE,CAAE,QAAQ,CAAC,CAC1C,KAAM,CAAAwB,CAAC,CAAGtC,KAAK,CAACgG,SAAS,CAAE/F,KAAK,CAAC,SAAS,CAAE,IAAI,CAAE+C,OAAO,CAAC,CAAC,CAC3D,KAAM,CAAAT,aAAa,CAAG,KAAM,CAAAzC,OAAO,CAACwC,CAAC,CAAC,CACtC,KAAM,CAAAgE,MAAe,CAAG,EAAE,CAE1B/D,aAAa,CAACsB,OAAO,CAAE9D,GAAG,EAAK,CAC7B,KAAM,CAAA8C,IAAI,CAAG9C,GAAG,CAAC8C,IAAI,CAAC,CAAC,CACvB,KAAM,CAAA0D,SAAS,CAAG1D,IAAI,CAAC2D,IAAI,CAACtD,MAAM,CAAC,CAAC,CAGpC,GAAIqD,SAAS,EAAI,GAAI,CAAApB,IAAI,CAAC,CAAC,CAAE,CAC3BmB,MAAM,CAACxC,IAAI,CAAC,CACV7B,EAAE,CAAElC,GAAG,CAACkC,EAAE,CACV8B,IAAI,CAAElB,IAAI,CAACkB,IAAI,CACff,OAAO,CAAEH,IAAI,CAACG,OAAO,CACrByD,SAAS,CAAE5D,IAAI,CAAC4D,SAAS,CACzBxC,WAAW,CAAEpB,IAAI,CAACoB,WAAW,CAC7BuC,IAAI,CAAED,SAAS,CACfG,cAAc,CAAE7D,IAAI,CAAC6D,cAAc,CACnCC,OAAO,CAAE9D,IAAI,CAAC8D,OAAO,CACrBC,UAAU,CAAE/D,IAAI,CAAC+D,UAAU,CAC3B5C,QAAQ,CAAEnB,IAAI,CAACmB,QAAQ,CACvB6C,cAAc,CAAEhE,IAAI,CAACgE,cAAc,EAAI,CAAC,CACxCC,SAAS,CAAEjE,IAAI,CAACiE,SAAS,EAAI,EAAE,CAC/BhF,SAAS,CAAEe,IAAI,CAACf,SAAS,CAACoB,MAAM,CAAC,CAAC,CAClC6D,SAAS,CAAElE,IAAI,CAACkE,SAAS,CACzBC,aAAa,CAAEnE,IAAI,CAACmE,aACtB,CAAC,CAAC,CACJ,CACF,CAAC,CAAC,CAEF,MAAO,CAAAV,MAAM,CACf,CAAE,MAAOpE,KAAK,CAAE,CACdV,OAAO,CAACU,KAAK,CAAC,gCAAgC,CAAEA,KAAK,CAAC,CACtD,KAAM,CAAAA,KAAK,CACb,CACF,CAEA,KAAM,CAAAsF,YAAYA,CAACC,OAAe,CAAyB,CACzD,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG3H,GAAG,CAACe,EAAE,CAAE,QAAQ,CAAE2G,OAAO,CAAC,CAC3C,KAAM,CAAAE,QAAQ,CAAG,KAAM,CAAA9H,MAAM,CAAC6H,QAAQ,CAAC,CAEvC,GAAI,CAACC,QAAQ,CAACnC,MAAM,CAAC,CAAC,CAAE,CACtB,MAAO,KAAI,CACb,CAEA,KAAM,CAAA3C,IAAI,CAAG8E,QAAQ,CAAC9E,IAAI,CAAC,CAAC,CAC5B,MAAO,CACLZ,EAAE,CAAE0F,QAAQ,CAAC1F,EAAE,CACf8B,IAAI,CAAElB,IAAI,CAACkB,IAAI,CACff,OAAO,CAAEH,IAAI,CAACG,OAAO,CACrByD,SAAS,CAAE5D,IAAI,CAAC4D,SAAS,CACzBxC,WAAW,CAAEpB,IAAI,CAACoB,WAAW,CAC7BuC,IAAI,CAAE3D,IAAI,CAAC2D,IAAI,CAACtD,MAAM,CAAC,CAAC,CACxBwD,cAAc,CAAE7D,IAAI,CAAC6D,cAAc,CACnCC,OAAO,CAAE9D,IAAI,CAAC8D,OAAO,CACrBC,UAAU,CAAE/D,IAAI,CAAC+D,UAAU,CAC3B5C,QAAQ,CAAEnB,IAAI,CAACmB,QAAQ,CACvB6C,cAAc,CAAEhE,IAAI,CAACgE,cAAc,EAAI,CAAC,CACxCC,SAAS,CAAEjE,IAAI,CAACiE,SAAS,EAAI,EAAE,CAC/BhF,SAAS,CAAEe,IAAI,CAACf,SAAS,CAACoB,MAAM,CAAC,CAAC,CAClC6D,SAAS,CAAElE,IAAI,CAACkE,SAAS,CACzBC,aAAa,CAAEnE,IAAI,CAACmE,aACtB,CAAC,CACH,CAAE,MAAO9E,KAAK,CAAE,CACdV,OAAO,CAACU,KAAK,CAAC,4BAA4B,CAAEA,KAAK,CAAC,CAClD,KAAM,CAAAA,KAAK,CACb,CACF,CAEA,KAAM,CAAA0F,QAAQA,CAACC,SAA4B,CAAmB,CAC5D,GAAI,CAEF,KAAM,CAAAC,kBAAkB,CAAG,CACzB/D,IAAI,CAAE8D,SAAS,CAAC9D,IAAI,CACpBf,OAAO,CAAE6E,SAAS,CAAC7E,OAAO,CAC1ByD,SAAS,CAAEoB,SAAS,CAACpB,SAAS,CAC9BxC,WAAW,CAAE4D,SAAS,CAAC5D,WAAW,CAClCuC,IAAI,CAAEpG,SAAS,CAACuF,QAAQ,CAACkC,SAAS,CAACrB,IAAI,CAAQ,CAC/CE,cAAc,CAAEmB,SAAS,CAACnB,cAAc,CACxCC,OAAO,CAAEkB,SAAS,CAAClB,OAAO,CAC1BC,UAAU,CAAEiB,SAAS,CAACjB,UAAU,CAChC5C,QAAQ,CAAE6D,SAAS,CAAC7D,QAAQ,CAC5B6C,cAAc,CAAEgB,SAAS,CAAChB,cAAc,CACxCkB,QAAQ,CAAEF,SAAS,CAACE,QAAQ,CAC5BjB,SAAS,CAAEe,SAAS,CAACf,SAAS,EAAI,EAAE,CACpChF,SAAS,CAAE1B,SAAS,CAACuF,QAAQ,CAAC,GAAI,CAAAR,IAAI,CAAC,CAAC,CAAQ,CAChD4B,SAAS,CAAEc,SAAS,CAACd,SAAS,CAC9BC,aAAa,CAAEa,SAAS,CAACb,aAC3B,CAAC,CAGD,KAAM,CAAAU,QAAQ,CAAG,KAAM,CAAA9H,MAAM,CAACD,UAAU,CAACmB,EAAE,CAAE,QAAQ,CAAC,CAAEgH,kBAAkB,CAAC,CAE3E,MAAO,CAAAJ,QAAQ,CAACzF,EAAE,CACpB,CAAE,MAAOC,KAAK,CAAE,CACdV,OAAO,CAACU,KAAK,CAAC,qBAAqB,CAAEA,KAAK,CAAC,CAC3C,KAAM,CAAAA,KAAK,CACb,CACF,CAEA,KAAM,CAAA8F,WAAWA,CAACP,OAAe,CAAE5E,IAAoB,CAAiB,CACtE,GAAI,CACF,KAAM,CAAA6E,QAAQ,CAAG3H,GAAG,CAACe,EAAE,CAAE,QAAQ,CAAE2G,OAAO,CAAC,CAG3C,KAAM,CAAAQ,aAAkB,CAAA1E,MAAA,CAAAC,MAAA,IAAQX,IAAI,CAAE,CACtC,GAAIA,IAAI,CAAC2D,IAAI,CAAE,CACbyB,aAAa,CAACzB,IAAI,CAAGpG,SAAS,CAACuF,QAAQ,CAAC9C,IAAI,CAAC2D,IAAI,CAAC,CACpD,CAEA,KAAM,CAAAtG,SAAS,CAACwH,QAAQ,CAAEO,aAAa,CAAC,CACxC,OACF,CAAE,MAAO/F,KAAK,CAAE,CACdV,OAAO,CAACU,KAAK,CAAC,uBAAuB,CAAEA,KAAK,CAAC,CAC7C,KAAM,CAAAA,KAAK,CACb,CACF,CAGA,KAAM,CAAAgG,WAAWA,CAACT,OAAe,CAAiB,CAChD,GAAI,CACFjG,OAAO,CAACC,GAAG,CAAC,iCAAiC,CAAEgG,OAAO,CAAC,CAGvD,KAAM,CAAAC,QAAQ,CAAG3H,GAAG,CAACe,EAAE,CAAE,QAAQ,CAAE2G,OAAO,CAAC,CAC3C,KAAM,CAAAE,QAAQ,CAAG,KAAM,CAAA9H,MAAM,CAAC6H,QAAQ,CAAC,CAEvC,GAAIC,QAAQ,CAACnC,MAAM,CAAC,CAAC,CAAE,CAErB,KAAM,CAAArF,SAAS,CAACuH,QAAQ,CAAC,CACzBlG,OAAO,CAACC,GAAG,CAAC,6CAA6C,CAAC,CAC5D,CAAC,IAAM,CACLD,OAAO,CAACmD,IAAI,CAAC,kCAAkC,CAAE8C,OAAO,CAAC,CAC3D,CAEA,OACF,CAAE,MAAOvF,KAAK,CAAE,CACdV,OAAO,CAACU,KAAK,CAAC,uBAAuB,CAAEA,KAAK,CAAC,CAC7C,KAAM,CAAAA,KAAK,CACb,CACF,CAGA,KAAM,CAAAiG,gBAAgBA,CAAA,CAAkB,CACtC,GAAI,CACF3G,OAAO,CAACC,GAAG,CAAC,uCAAuC,CAAC,CAEpD,KAAM,CAAA2G,KAAK,CAAG,GAAI,CAAAjD,IAAI,CAAC,CAAC,CACxBiD,KAAK,CAACC,QAAQ,CAAC,CAAC,CAAE,CAAC,CAAE,CAAC,CAAE,CAAC,CAAC,CAE1B,KAAM,CAAArC,SAAS,CAAGrG,UAAU,CAACmB,EAAE,CAAE,QAAQ,CAAC,CAC1C,KAAM,CAAAyB,aAAa,CAAG,KAAM,CAAAzC,OAAO,CAACkG,SAAS,CAAC,CAC9C,KAAM,CAAAC,cAA+B,CAAG,EAAE,CAE1C1D,aAAa,CAACsB,OAAO,CAAE9D,GAAG,EAAK,CAC7B,KAAM,CAAA8C,IAAI,CAAG9C,GAAG,CAAC8C,IAAI,CAAC,CAAC,CACvB,KAAM,CAAA0D,SAAS,CAAG1D,IAAI,CAAC2D,IAAI,CAACtD,MAAM,CAAC,CAAC,CAGpC,GAAIqD,SAAS,CAAG6B,KAAK,CAAE,CACrB5G,OAAO,CAACC,GAAG,CAAC,yCAAyCoB,IAAI,CAACkB,IAAI,KAAKwC,SAAS,CAAC+B,YAAY,CAAC,CAAC,GAAG,CAAC,CAC/FrC,cAAc,CAACnC,IAAI,CAAC,IAAI,CAACoE,WAAW,CAACnI,GAAG,CAACkC,EAAE,CAAC,CAAC,CAC/C,CACF,CAAC,CAAC,CAEF,KAAM,CAAAiE,OAAO,CAACC,GAAG,CAACF,cAAc,CAAC,CACjCzE,OAAO,CAACC,GAAG,CAAC,4BAA4BwE,cAAc,CAACvB,MAAM,cAAc,CAAC,CAC9E,CAAE,MAAOxC,KAAK,CAAE,CACdV,OAAO,CAACU,KAAK,CAAC,6BAA6B,CAAEA,KAAK,CAAC,CACnD,KAAM,CAAAA,KAAK,CACb,CACF,CAGA,KAAM,CAAAqG,gBAAgBA,CAACC,GAAW,CAAmB,CACnD,GAAI,CACFhH,OAAO,CAACC,GAAG,CAAC,wCAAwC,CAAC,CAErD,GAAI+G,GAAG,CAACC,UAAU,CAAC,MAAM,CAAC,EAAI,CAACD,GAAG,CAACC,UAAU,CAAC,OAAO,CAAC,CAAE,CACtDjH,OAAO,CAACC,GAAG,CAAC,6DAA6D,CAAC,CAC1E,MAAO,CAAA+G,GAAG,CACZ,CAGA,GAAItH,aAAa,CAAC,CAAC,CAAE,CACnB,MAAO,8GAA8G,CACvH,CAGA,KAAM,CAAAwH,QAAQ,CAAG,UAAUzH,MAAM,CAAC,CAAC,EAAE,CACrC,KAAM,CAAA0H,UAAU,CAAGlI,GAAG,CAACM,OAAO,CAAE2H,QAAQ,CAAC,CAGzC,GAAIF,GAAG,CAACC,UAAU,CAAC,OAAO,CAAC,CAAE,CAE3B,KAAM,CAAA7H,YAAY,CAAC+H,UAAU,CAAEH,GAAG,CAAE,UAAU,CAAC,CAC/C,KAAM,CAAAI,WAAW,CAAG,KAAM,CAAAjI,cAAc,CAACgI,UAAU,CAAC,CACpD,MAAO,CAAAC,WAAW,CACpB,CAIA,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAACN,GAAG,CAAC,CACjC,KAAM,CAAAO,IAAI,CAAG,KAAM,CAAAF,QAAQ,CAACE,IAAI,CAAC,CAAC,CAGlC,KAAM,CAAAC,YAAY,CAAG,KAAM,CAAAtI,WAAW,CAACiI,UAAU,CAAEI,IAAI,CAAC,CAGxD,KAAM,CAAAH,WAAW,CAAG,KAAM,CAAAjI,cAAc,CAACqI,YAAY,CAACvI,GAAG,CAAC,CAC1D,MAAO,CAAAmI,WAAW,CACpB,CAAE,MAAO1G,KAAK,CAAE,CACdV,OAAO,CAACU,KAAK,CAAC,+CAA+C,CAAEA,KAAK,CAAC,CAErE,MAAO,8GAA8G,CACvH,CACF,CAEA,KAAM,CAAA+G,gBAAgBA,CAACT,GAAW,CAAmB,CACnD,GAAI,CACFhH,OAAO,CAACC,GAAG,CAAC,wCAAwC,CAAE+G,GAAG,CAACU,SAAS,CAAC,CAAC,CAAE,EAAE,CAAC,CAAG,KAAK,CAAC,CAGnF,GAAIV,GAAG,CAACC,UAAU,CAAC,MAAM,CAAC,EAAI,CAACD,GAAG,CAACC,UAAU,CAAC,OAAO,CAAC,CAAE,CACtDjH,OAAO,CAACC,GAAG,CAAC,6DAA6D,CAAC,CAC1E,MAAO,CAAA+G,GAAG,CACZ,CAGA,KAAM,CAAAE,QAAQ,CAAG,UAAUzH,MAAM,CAAC,CAAC,EAAE,CACrC,KAAM,CAAA0H,UAAU,CAAGlI,GAAG,CAACM,OAAO,CAAE2H,QAAQ,CAAC,CAGzC,GAAIF,GAAG,CAACC,UAAU,CAAC,OAAO,CAAC,CAAE,CAC3BjH,OAAO,CAACC,GAAG,CAAC,qCAAqC,CAAC,CAElD,KAAM,CAAAb,YAAY,CAAC+H,UAAU,CAAEH,GAAG,CAAE,UAAU,CAAC,CAC/C,KAAM,CAAAI,WAAW,CAAG,KAAM,CAAAjI,cAAc,CAACgI,UAAU,CAAC,CACpDnH,OAAO,CAACC,GAAG,CAAC,0CAA0C,CAAEmH,WAAW,CAACM,SAAS,CAAC,CAAC,CAAE,EAAE,CAAC,CAAG,KAAK,CAAC,CAC7F,MAAO,CAAAN,WAAW,CACpB,CAGApH,OAAO,CAACC,GAAG,CAAC,sCAAsC,CAAC,CAEnD,KAAM,CAAAoH,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAACN,GAAG,CAAC,CACjC,KAAM,CAAAO,IAAI,CAAG,KAAM,CAAAF,QAAQ,CAACE,IAAI,CAAC,CAAC,CAElCvH,OAAO,CAACC,GAAG,CAAC,qDAAqD,CAAC,CAElE,KAAM,CAAAuH,YAAY,CAAG,KAAM,CAAAtI,WAAW,CAACiI,UAAU,CAAEI,IAAI,CAAC,CAGxD,KAAM,CAAAH,WAAW,CAAG,KAAM,CAAAjI,cAAc,CAACqI,YAAY,CAACvI,GAAG,CAAC,CAC1De,OAAO,CAACC,GAAG,CAAC,0CAA0C,CAAEmH,WAAW,CAACM,SAAS,CAAC,CAAC,CAAE,EAAE,CAAC,CAAG,KAAK,CAAC,CAC7F,MAAO,CAAAN,WAAW,CACpB,CAAE,MAAO1G,KAAK,CAAE,CACdV,OAAO,CAACU,KAAK,CAAC,+CAA+C,CAAEA,KAAK,CAAC,CAGrE,GAAIhB,aAAa,CAAC,CAAC,CAAE,CACnBM,OAAO,CAACmD,IAAI,CAAC,uDAAuD,CAAC,CACrE,MAAO,8GAA8G,CACvH,CAGA,KAAM,CAAAzC,KAAK,CACb,CACF,CAGA,KAAM,CAAAiH,WAAWA,CAAA,CAAoB,CACnC,GAAI,CACF,KAAM,CAAA9G,QAAQ,CAAG1C,UAAU,CAACmB,EAAE,CAAE,OAAO,CAAC,CACxC,KAAM,CAAAyB,aAAa,CAAG,KAAM,CAAAzC,OAAO,CAACuC,QAAQ,CAAC,CAC7C,KAAM,CAAA+G,KAAa,CAAG,EAAE,CAExB7G,aAAa,CAACsB,OAAO,CAAE9D,GAAG,EAAK,CAC7B,KAAM,CAAA8C,IAAI,CAAG9C,GAAG,CAAC8C,IAAI,CAAC,CAAC,CACvBuG,KAAK,CAACtF,IAAI,CAAC,CACT7B,EAAE,CAAElC,GAAG,CAACkC,EAAE,CACVN,GAAG,CAAEkB,IAAI,CAAClB,GAAG,CACbN,KAAK,CAAEwB,IAAI,CAACxB,KAAK,CACjBE,QAAQ,CAAEsB,IAAI,CAACtB,QAAQ,CACvBuB,WAAW,CAAED,IAAI,CAACC,WAAW,CAC7BC,QAAQ,CAAEF,IAAI,CAACE,QAAQ,CACvBC,OAAO,CAAEH,IAAI,CAACG,OAAO,CACrBC,QAAQ,CAAEJ,IAAI,CAACI,QAAQ,CACvBnB,SAAS,CAAEe,IAAI,CAACf,SAAS,CAACoB,MAAM,CAAC,CAAC,CAClClB,WAAW,CAAEa,IAAI,CAACb,WAAW,CAACkB,MAAM,CAAC,CACvC,CAAC,CAAC,CACJ,CAAC,CAAC,CAEF,MAAO,CAAAkG,KAAK,CACd,CAAE,MAAOlH,KAAK,CAAE,CACdV,OAAO,CAACU,KAAK,CAAC,0BAA0B,CAAEA,KAAK,CAAC,CAChD,KAAM,CAAAA,KAAK,CACb,CACF,CAEA,KAAM,CAAAmH,aAAaA,CAAA,CAAoB,CACrC,GAAI,CACF,KAAM,CAAAhH,QAAQ,CAAG1C,UAAU,CAACmB,EAAE,CAAE,OAAO,CAAC,CACxC,KAAM,CAAAwB,CAAC,CAAGtC,KAAK,CAACqC,QAAQ,CAAEpC,KAAK,CAAC,UAAU,CAAE,IAAI,CAAE,YAAY,CAAC,CAAC,CAChE,KAAM,CAAAsC,aAAa,CAAG,KAAM,CAAAzC,OAAO,CAACwC,CAAC,CAAC,CACtC,KAAM,CAAA8G,KAAa,CAAG,EAAE,CAExB7G,aAAa,CAACsB,OAAO,CAAE9D,GAAG,EAAK,CAC7B,KAAM,CAAA8C,IAAI,CAAG9C,GAAG,CAAC8C,IAAI,CAAC,CAAC,CACvBuG,KAAK,CAACtF,IAAI,CAAC,CACT7B,EAAE,CAAElC,GAAG,CAACkC,EAAE,CACVN,GAAG,CAAEkB,IAAI,CAAClB,GAAG,CACbN,KAAK,CAAEwB,IAAI,CAACxB,KAAK,CACjBE,QAAQ,CAAEsB,IAAI,CAACtB,QAAQ,CACvBuB,WAAW,CAAED,IAAI,CAACC,WAAW,CAC7BC,QAAQ,CAAEF,IAAI,CAACE,QAAQ,CACvBC,OAAO,CAAEH,IAAI,CAACG,OAAO,CACrBC,QAAQ,CAAEJ,IAAI,CAACI,QAAQ,CACvBnB,SAAS,CAAEe,IAAI,CAACf,SAAS,CAACoB,MAAM,CAAC,CAAC,CAClClB,WAAW,CAAEa,IAAI,CAACb,WAAW,CAACkB,MAAM,CAAC,CACvC,CAAC,CAAC,CACJ,CAAC,CAAC,CAEF,MAAO,CAAAkG,KAAK,CACd,CAAE,MAAOlH,KAAK,CAAE,CACdV,OAAO,CAACU,KAAK,CAAC,4BAA4B,CAAEA,KAAK,CAAC,CAClD,KAAM,CAAAA,KAAK,CACb,CACF,CAEA,KAAM,CAAAoH,UAAUA,CAAChG,MAAc,CAAEL,QAAiB,CAAiB,CACjE,GAAI,CACF,KAAM,CAAApB,OAAO,CAAG9B,GAAG,CAACe,EAAE,CAAE,OAAO,CAAEwC,MAAM,CAAC,CACxC,KAAM,CAAApD,SAAS,CAAC2B,OAAO,CAAE,CAAEoB,QAAS,CAAC,CAAC,CACtC,OACF,CAAE,MAAOf,KAAK,CAAE,CACdV,OAAO,CAACU,KAAK,CAAC,iCAAiC,CAAEA,KAAK,CAAC,CACvD,KAAM,CAAAA,KAAK,CACb,CACF,CAGA,KAAM,CAAAqH,UAAUA,CAACjG,MAAc,CAAiB,CAC9C,GAAI,CACF9B,OAAO,CAACC,GAAG,CAAC,gCAAgC,CAAE6B,MAAM,CAAC,CAGrD,KAAM,CAAAzB,OAAO,CAAG9B,GAAG,CAACe,EAAE,CAAE,OAAO,CAAEwC,MAAM,CAAC,CACxC,KAAM,CAAAZ,OAAO,CAAG,KAAM,CAAA7C,MAAM,CAACgC,OAAO,CAAC,CAErC,GAAIa,OAAO,CAAC8C,MAAM,CAAC,CAAC,CAAE,CACpB,KAAM,CAAA5C,QAAQ,CAAGF,OAAO,CAACG,IAAI,CAAC,CAAC,CAG/B,GAAID,QAAQ,CAACrB,QAAQ,GAAK,YAAY,CAAE,CAEtC,KAAM,CAAAmC,SAAS,CAAG/D,UAAU,CAACmB,EAAE,CAAE,QAAQ,CAAC,CAC1C,KAAM,CAAAwB,CAAC,CAAGtC,KAAK,CAAC0D,SAAS,CAAEzD,KAAK,CAAC,SAAS,CAAE,IAAI,CAAEqD,MAAM,CAAC,CAAC,CAC1D,KAAM,CAAAkG,aAAa,CAAG,KAAM,CAAA1J,OAAO,CAACwC,CAAC,CAAC,CAGtC,KAAM,CAAAmH,mBAAoC,CAAG,EAAE,CAC/CD,aAAa,CAAC3F,OAAO,CAAE0B,QAAQ,EAAK,CAElCkE,mBAAmB,CAAC3F,IAAI,CAAC,IAAI,CAACiC,mBAAmB,CAACR,QAAQ,CAACtD,EAAE,CAAC,CAAC,CAE/DwH,mBAAmB,CAAC3F,IAAI,CAAC3D,SAAS,CAACoF,QAAQ,CAAC9E,GAAG,CAAC,CAAC,CACnD,CAAC,CAAC,CAEF,KAAM,CAAAyF,OAAO,CAACC,GAAG,CAACsD,mBAAmB,CAAC,CACtCjI,OAAO,CAACC,GAAG,CAAC,4BAA4B+H,aAAa,CAACE,IAAI,oBAAoBpG,MAAM,EAAE,CAAC,CACzF,CAGA,KAAM,CAAA0C,SAAS,CAAGrG,UAAU,CAACmB,EAAE,CAAE,QAAQ,CAAC,CAC1C,KAAM,CAAA6I,WAAW,CAAG3J,KAAK,CAACgG,SAAS,CAAE/F,KAAK,CAAC,WAAW,CAAE,IAAI,CAAEqD,MAAM,CAAC,CAAC,CACtE,KAAM,CAAAsG,cAAc,CAAG,KAAM,CAAA9J,OAAO,CAAC6J,WAAW,CAAC,CAEjD,KAAM,CAAAE,mBAAoC,CAAG,EAAE,CAC/CD,cAAc,CAAC/F,OAAO,CAAE8D,QAAQ,EAAK,CACnCkC,mBAAmB,CAAC/F,IAAI,CAAC3D,SAAS,CAACwH,QAAQ,CAAClH,GAAG,CAAC,CAAC,CACnD,CAAC,CAAC,CAEF,KAAM,CAAAyF,OAAO,CAACC,GAAG,CAAC0D,mBAAmB,CAAC,CACtCrI,OAAO,CAACC,GAAG,CAAC,4BAA4BmI,cAAc,CAACF,IAAI,2BAA2BpG,MAAM,EAAE,CAAC,CACjG,CAGA,KAAM,CAAAnD,SAAS,CAAC0B,OAAO,CAAC,CACxBL,OAAO,CAACC,GAAG,CAAC,4CAA4C,CAAC,CACzD,OACF,CAAE,MAAOS,KAAK,CAAE,CACdV,OAAO,CAACU,KAAK,CAAC,sBAAsB,CAAEA,KAAK,CAAC,CAC5C,KAAM,CAAAA,KAAK,CACb,CACF,CACF,CAEA,cAAe,IAAI,CAAAf,eAAe,CAAC,CAAC","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}